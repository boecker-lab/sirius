/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6.0.0-SNAPSHOT
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.unijena.bioinf.ms.nightsky.sdk.model.Subscription;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * 
 */
@JsonPropertyOrder({
  AccountInfo.JSON_PROPERTY_USER_I_D,
  AccountInfo.JSON_PROPERTY_USERNAME,
  AccountInfo.JSON_PROPERTY_USER_EMAIL,
  AccountInfo.JSON_PROPERTY_GRAVATAR_U_R_L,
  AccountInfo.JSON_PROPERTY_SUBSCRIPTIONS,
  AccountInfo.JSON_PROPERTY_ACTIVE_SUBSCRIPTION_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-11T15:12:24.554845061+01:00[Europe/Berlin]")
public class AccountInfo {
  public static final String JSON_PROPERTY_USER_I_D = "userID";
  private String userID;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private JsonNullable<String> username = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USER_EMAIL = "userEmail";
  private String userEmail;

  public static final String JSON_PROPERTY_GRAVATAR_U_R_L = "gravatarURL";
  private JsonNullable<String> gravatarURL = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUBSCRIPTIONS = "subscriptions";
  private List<Subscription> subscriptions;

  public static final String JSON_PROPERTY_ACTIVE_SUBSCRIPTION_ID = "activeSubscriptionId";
  private JsonNullable<String> activeSubscriptionId = JsonNullable.<String>undefined();

  public AccountInfo() { 
  }

  public AccountInfo userID(String userID) {
    this.userID = userID;
    return this;
  }

   /**
   * Get userID
   * @return userID
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserID() {
    return userID;
  }


  @JsonProperty(JSON_PROPERTY_USER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserID(String userID) {
    this.userID = userID;
  }


  public AccountInfo username(String username) {
    this.username = JsonNullable.<String>of(username);
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getUsername() {
        return username.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsername_JsonNullable() {
    return username;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME)
  public void setUsername_JsonNullable(JsonNullable<String> username) {
    this.username = username;
  }

  public void setUsername(String username) {
    this.username = JsonNullable.<String>of(username);
  }


  public AccountInfo userEmail(String userEmail) {
    this.userEmail = userEmail;
    return this;
  }

   /**
   * Get userEmail
   * @return userEmail
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserEmail() {
    return userEmail;
  }


  @JsonProperty(JSON_PROPERTY_USER_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserEmail(String userEmail) {
    this.userEmail = userEmail;
  }


  public AccountInfo gravatarURL(String gravatarURL) {
    this.gravatarURL = JsonNullable.<String>of(gravatarURL);
    return this;
  }

   /**
   * Get gravatarURL
   * @return gravatarURL
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getGravatarURL() {
        return gravatarURL.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GRAVATAR_U_R_L)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGravatarURL_JsonNullable() {
    return gravatarURL;
  }
  
  @JsonProperty(JSON_PROPERTY_GRAVATAR_U_R_L)
  public void setGravatarURL_JsonNullable(JsonNullable<String> gravatarURL) {
    this.gravatarURL = gravatarURL;
  }

  public void setGravatarURL(String gravatarURL) {
    this.gravatarURL = JsonNullable.<String>of(gravatarURL);
  }


  public AccountInfo subscriptions(List<Subscription> subscriptions) {
    this.subscriptions = subscriptions;
    return this;
  }

  public AccountInfo addSubscriptionsItem(Subscription subscriptionsItem) {
    if (this.subscriptions == null) {
      this.subscriptions = new ArrayList<>();
    }
    this.subscriptions.add(subscriptionsItem);
    return this;
  }

   /**
   * Get subscriptions
   * @return subscriptions
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Subscription> getSubscriptions() {
    return subscriptions;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptions(List<Subscription> subscriptions) {
    this.subscriptions = subscriptions;
  }


  public AccountInfo activeSubscriptionId(String activeSubscriptionId) {
    this.activeSubscriptionId = JsonNullable.<String>of(activeSubscriptionId);
    return this;
  }

   /**
   * Get activeSubscriptionId
   * @return activeSubscriptionId
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getActiveSubscriptionId() {
        return activeSubscriptionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACTIVE_SUBSCRIPTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getActiveSubscriptionId_JsonNullable() {
    return activeSubscriptionId;
  }
  
  @JsonProperty(JSON_PROPERTY_ACTIVE_SUBSCRIPTION_ID)
  public void setActiveSubscriptionId_JsonNullable(JsonNullable<String> activeSubscriptionId) {
    this.activeSubscriptionId = activeSubscriptionId;
  }

  public void setActiveSubscriptionId(String activeSubscriptionId) {
    this.activeSubscriptionId = JsonNullable.<String>of(activeSubscriptionId);
  }


  /**
   * Return true if this AccountInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountInfo accountInfo = (AccountInfo) o;
    return Objects.equals(this.userID, accountInfo.userID) &&
        equalsNullable(this.username, accountInfo.username) &&
        Objects.equals(this.userEmail, accountInfo.userEmail) &&
        equalsNullable(this.gravatarURL, accountInfo.gravatarURL) &&
        Objects.equals(this.subscriptions, accountInfo.subscriptions) &&
        equalsNullable(this.activeSubscriptionId, accountInfo.activeSubscriptionId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(userID, hashCodeNullable(username), userEmail, hashCodeNullable(gravatarURL), subscriptions, hashCodeNullable(activeSubscriptionId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountInfo {\n");
    sb.append("    userID: ").append(toIndentedString(userID)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    userEmail: ").append(toIndentedString(userEmail)).append("\n");
    sb.append("    gravatarURL: ").append(toIndentedString(gravatarURL)).append("\n");
    sb.append("    subscriptions: ").append(toIndentedString(subscriptions)).append("\n");
    sb.append("    activeSubscriptionId: ").append(toIndentedString(activeSubscriptionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `userID` to the URL query string
    if (getUserID() != null) {
      joiner.add(String.format("%suserID%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUserID()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `username` to the URL query string
    if (getUsername() != null) {
      joiner.add(String.format("%susername%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUsername()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `userEmail` to the URL query string
    if (getUserEmail() != null) {
      joiner.add(String.format("%suserEmail%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUserEmail()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `gravatarURL` to the URL query string
    if (getGravatarURL() != null) {
      joiner.add(String.format("%sgravatarURL%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getGravatarURL()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `subscriptions` to the URL query string
    if (getSubscriptions() != null) {
      for (int i = 0; i < getSubscriptions().size(); i++) {
        if (getSubscriptions().get(i) != null) {
          joiner.add(getSubscriptions().get(i).toUrlQueryString(String.format("%ssubscriptions%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `activeSubscriptionId` to the URL query string
    if (getActiveSubscriptionId() != null) {
      joiner.add(String.format("%sactiveSubscriptionId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getActiveSubscriptionId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

