/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6.0.0-SNAPSHOT
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.unijena.bioinf.ms.nightsky.sdk.model.AlignedFeature;
import de.unijena.bioinf.ms.nightsky.sdk.model.ConsensusAnnotationsCSI;
import de.unijena.bioinf.ms.nightsky.sdk.model.ConsensusAnnotationsDeNovo;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * 
 */
@JsonPropertyOrder({
  Compound.JSON_PROPERTY_COMPOUND_ID,
  Compound.JSON_PROPERTY_NAME,
  Compound.JSON_PROPERTY_RT_START_SECONDS,
  Compound.JSON_PROPERTY_RT_END_SECONDS,
  Compound.JSON_PROPERTY_NEUTRAL_MASS,
  Compound.JSON_PROPERTY_FEATURES,
  Compound.JSON_PROPERTY_CONSENSUS_ANNOTATIONS,
  Compound.JSON_PROPERTY_CONSENSUS_ANNOTATIONS_DE_NOVO,
  Compound.JSON_PROPERTY_CUSTOM_ANNOTATIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-11T15:12:24.554845061+01:00[Europe/Berlin]")
public class Compound {
  public static final String JSON_PROPERTY_COMPOUND_ID = "compoundId";
  private String compoundId;

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RT_START_SECONDS = "rtStartSeconds";
  private JsonNullable<Double> rtStartSeconds = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_RT_END_SECONDS = "rtEndSeconds";
  private JsonNullable<Double> rtEndSeconds = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_NEUTRAL_MASS = "neutralMass";
  private JsonNullable<Double> neutralMass = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_FEATURES = "features";
  private List<AlignedFeature> features;

  public static final String JSON_PROPERTY_CONSENSUS_ANNOTATIONS = "consensusAnnotations";
  private JsonNullable<ConsensusAnnotationsCSI> consensusAnnotations = JsonNullable.<ConsensusAnnotationsCSI>undefined();

  public static final String JSON_PROPERTY_CONSENSUS_ANNOTATIONS_DE_NOVO = "consensusAnnotationsDeNovo";
  private JsonNullable<ConsensusAnnotationsDeNovo> consensusAnnotationsDeNovo = JsonNullable.<ConsensusAnnotationsDeNovo>undefined();

  public static final String JSON_PROPERTY_CUSTOM_ANNOTATIONS = "customAnnotations";
  private JsonNullable<ConsensusAnnotationsCSI> customAnnotations = JsonNullable.<ConsensusAnnotationsCSI>undefined();

  public Compound() { 
  }

  public Compound compoundId(String compoundId) {
    this.compoundId = compoundId;
    return this;
  }

   /**
   * uid of this compound Entity
   * @return compoundId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COMPOUND_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCompoundId() {
    return compoundId;
  }


  @JsonProperty(JSON_PROPERTY_COMPOUND_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompoundId(String compoundId) {
    this.compoundId = compoundId;
  }


  public Compound name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Some (optional) human-readable name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public Compound rtStartSeconds(Double rtStartSeconds) {
    this.rtStartSeconds = JsonNullable.<Double>of(rtStartSeconds);
    return this;
  }

   /**
   * The merged/consensus retention time start (earliest rt) of this compound
   * @return rtStartSeconds
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Double getRtStartSeconds() {
        return rtStartSeconds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RT_START_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getRtStartSeconds_JsonNullable() {
    return rtStartSeconds;
  }
  
  @JsonProperty(JSON_PROPERTY_RT_START_SECONDS)
  public void setRtStartSeconds_JsonNullable(JsonNullable<Double> rtStartSeconds) {
    this.rtStartSeconds = rtStartSeconds;
  }

  public void setRtStartSeconds(Double rtStartSeconds) {
    this.rtStartSeconds = JsonNullable.<Double>of(rtStartSeconds);
  }


  public Compound rtEndSeconds(Double rtEndSeconds) {
    this.rtEndSeconds = JsonNullable.<Double>of(rtEndSeconds);
    return this;
  }

   /**
   * The merged/consensus retention time end (latest rt) of this compound
   * @return rtEndSeconds
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Double getRtEndSeconds() {
        return rtEndSeconds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RT_END_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getRtEndSeconds_JsonNullable() {
    return rtEndSeconds;
  }
  
  @JsonProperty(JSON_PROPERTY_RT_END_SECONDS)
  public void setRtEndSeconds_JsonNullable(JsonNullable<Double> rtEndSeconds) {
    this.rtEndSeconds = rtEndSeconds;
  }

  public void setRtEndSeconds(Double rtEndSeconds) {
    this.rtEndSeconds = JsonNullable.<Double>of(rtEndSeconds);
  }


  public Compound neutralMass(Double neutralMass) {
    this.neutralMass = JsonNullable.<Double>of(neutralMass);
    return this;
  }

   /**
   * Neutral mass of this compound. Ion masse minus the mass of the assigned adduct of each feature assigned  to this compound should result in the same neutral mass
   * @return neutralMass
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Double getNeutralMass() {
        return neutralMass.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NEUTRAL_MASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getNeutralMass_JsonNullable() {
    return neutralMass;
  }
  
  @JsonProperty(JSON_PROPERTY_NEUTRAL_MASS)
  public void setNeutralMass_JsonNullable(JsonNullable<Double> neutralMass) {
    this.neutralMass = neutralMass;
  }

  public void setNeutralMass(Double neutralMass) {
    this.neutralMass = JsonNullable.<Double>of(neutralMass);
  }


  public Compound features(List<AlignedFeature> features) {
    this.features = features;
    return this;
  }

  public Compound addFeaturesItem(AlignedFeature featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<>();
    }
    this.features.add(featuresItem);
    return this;
  }

   /**
   * List of aligned features (adducts) that belong to the same (this) compound
   * @return features
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AlignedFeature> getFeatures() {
    return features;
  }


  @JsonProperty(JSON_PROPERTY_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeatures(List<AlignedFeature> features) {
    this.features = features;
  }


  public Compound consensusAnnotations(ConsensusAnnotationsCSI consensusAnnotations) {
    this.consensusAnnotations = JsonNullable.<ConsensusAnnotationsCSI>of(consensusAnnotations);
    return this;
  }

   /**
   * Get consensusAnnotations
   * @return consensusAnnotations
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public ConsensusAnnotationsCSI getConsensusAnnotations() {
        return consensusAnnotations.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONSENSUS_ANNOTATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ConsensusAnnotationsCSI> getConsensusAnnotations_JsonNullable() {
    return consensusAnnotations;
  }
  
  @JsonProperty(JSON_PROPERTY_CONSENSUS_ANNOTATIONS)
  public void setConsensusAnnotations_JsonNullable(JsonNullable<ConsensusAnnotationsCSI> consensusAnnotations) {
    this.consensusAnnotations = consensusAnnotations;
  }

  public void setConsensusAnnotations(ConsensusAnnotationsCSI consensusAnnotations) {
    this.consensusAnnotations = JsonNullable.<ConsensusAnnotationsCSI>of(consensusAnnotations);
  }


  public Compound consensusAnnotationsDeNovo(ConsensusAnnotationsDeNovo consensusAnnotationsDeNovo) {
    this.consensusAnnotationsDeNovo = JsonNullable.<ConsensusAnnotationsDeNovo>of(consensusAnnotationsDeNovo);
    return this;
  }

   /**
   * Get consensusAnnotationsDeNovo
   * @return consensusAnnotationsDeNovo
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public ConsensusAnnotationsDeNovo getConsensusAnnotationsDeNovo() {
        return consensusAnnotationsDeNovo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONSENSUS_ANNOTATIONS_DE_NOVO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ConsensusAnnotationsDeNovo> getConsensusAnnotationsDeNovo_JsonNullable() {
    return consensusAnnotationsDeNovo;
  }
  
  @JsonProperty(JSON_PROPERTY_CONSENSUS_ANNOTATIONS_DE_NOVO)
  public void setConsensusAnnotationsDeNovo_JsonNullable(JsonNullable<ConsensusAnnotationsDeNovo> consensusAnnotationsDeNovo) {
    this.consensusAnnotationsDeNovo = consensusAnnotationsDeNovo;
  }

  public void setConsensusAnnotationsDeNovo(ConsensusAnnotationsDeNovo consensusAnnotationsDeNovo) {
    this.consensusAnnotationsDeNovo = JsonNullable.<ConsensusAnnotationsDeNovo>of(consensusAnnotationsDeNovo);
  }


  public Compound customAnnotations(ConsensusAnnotationsCSI customAnnotations) {
    this.customAnnotations = JsonNullable.<ConsensusAnnotationsCSI>of(customAnnotations);
    return this;
  }

   /**
   * Get customAnnotations
   * @return customAnnotations
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public ConsensusAnnotationsCSI getCustomAnnotations() {
        return customAnnotations.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOM_ANNOTATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ConsensusAnnotationsCSI> getCustomAnnotations_JsonNullable() {
    return customAnnotations;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOM_ANNOTATIONS)
  public void setCustomAnnotations_JsonNullable(JsonNullable<ConsensusAnnotationsCSI> customAnnotations) {
    this.customAnnotations = customAnnotations;
  }

  public void setCustomAnnotations(ConsensusAnnotationsCSI customAnnotations) {
    this.customAnnotations = JsonNullable.<ConsensusAnnotationsCSI>of(customAnnotations);
  }


  /**
   * Return true if this Compound object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Compound compound = (Compound) o;
    return Objects.equals(this.compoundId, compound.compoundId) &&
        equalsNullable(this.name, compound.name) &&
        equalsNullable(this.rtStartSeconds, compound.rtStartSeconds) &&
        equalsNullable(this.rtEndSeconds, compound.rtEndSeconds) &&
        equalsNullable(this.neutralMass, compound.neutralMass) &&
        Objects.equals(this.features, compound.features) &&
        equalsNullable(this.consensusAnnotations, compound.consensusAnnotations) &&
        equalsNullable(this.consensusAnnotationsDeNovo, compound.consensusAnnotationsDeNovo) &&
        equalsNullable(this.customAnnotations, compound.customAnnotations);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(compoundId, hashCodeNullable(name), hashCodeNullable(rtStartSeconds), hashCodeNullable(rtEndSeconds), hashCodeNullable(neutralMass), features, hashCodeNullable(consensusAnnotations), hashCodeNullable(consensusAnnotationsDeNovo), hashCodeNullable(customAnnotations));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Compound {\n");
    sb.append("    compoundId: ").append(toIndentedString(compoundId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    rtStartSeconds: ").append(toIndentedString(rtStartSeconds)).append("\n");
    sb.append("    rtEndSeconds: ").append(toIndentedString(rtEndSeconds)).append("\n");
    sb.append("    neutralMass: ").append(toIndentedString(neutralMass)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    consensusAnnotations: ").append(toIndentedString(consensusAnnotations)).append("\n");
    sb.append("    consensusAnnotationsDeNovo: ").append(toIndentedString(consensusAnnotationsDeNovo)).append("\n");
    sb.append("    customAnnotations: ").append(toIndentedString(customAnnotations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `compoundId` to the URL query string
    if (getCompoundId() != null) {
      joiner.add(String.format("%scompoundId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCompoundId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `rtStartSeconds` to the URL query string
    if (getRtStartSeconds() != null) {
      joiner.add(String.format("%srtStartSeconds%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRtStartSeconds()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `rtEndSeconds` to the URL query string
    if (getRtEndSeconds() != null) {
      joiner.add(String.format("%srtEndSeconds%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRtEndSeconds()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `neutralMass` to the URL query string
    if (getNeutralMass() != null) {
      joiner.add(String.format("%sneutralMass%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNeutralMass()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `features` to the URL query string
    if (getFeatures() != null) {
      for (int i = 0; i < getFeatures().size(); i++) {
        if (getFeatures().get(i) != null) {
          joiner.add(getFeatures().get(i).toUrlQueryString(String.format("%sfeatures%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `consensusAnnotations` to the URL query string
    if (getConsensusAnnotations() != null) {
      joiner.add(getConsensusAnnotations().toUrlQueryString(prefix + "consensusAnnotations" + suffix));
    }

    // add `consensusAnnotationsDeNovo` to the URL query string
    if (getConsensusAnnotationsDeNovo() != null) {
      joiner.add(getConsensusAnnotationsDeNovo().toUrlQueryString(prefix + "consensusAnnotationsDeNovo" + suffix));
    }

    // add `customAnnotations` to the URL query string
    if (getCustomAnnotations() != null) {
      joiner.add(getCustomAnnotations().toUrlQueryString(prefix + "customAnnotations" + suffix));
    }

    return joiner.toString();
  }
}

