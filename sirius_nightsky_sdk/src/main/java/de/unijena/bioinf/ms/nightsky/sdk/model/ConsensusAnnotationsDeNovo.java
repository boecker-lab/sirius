/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6.0.0-SNAPSHOT
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.unijena.bioinf.ms.nightsky.sdk.model.CompoundClasses;
import de.unijena.bioinf.ms.nightsky.sdk.model.ConsensusCriterionDeNovo;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * 
 */
@JsonPropertyOrder({
  ConsensusAnnotationsDeNovo.JSON_PROPERTY_MOLECULAR_FORMULA,
  ConsensusAnnotationsDeNovo.JSON_PROPERTY_COMPOUND_CLASSES,
  ConsensusAnnotationsDeNovo.JSON_PROPERTY_SUPPORTING_FEATURE_IDS,
  ConsensusAnnotationsDeNovo.JSON_PROPERTY_SELECTION_CRITERION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-11T15:12:24.554845061+01:00[Europe/Berlin]")
public class ConsensusAnnotationsDeNovo {
  public static final String JSON_PROPERTY_MOLECULAR_FORMULA = "molecularFormula";
  private JsonNullable<String> molecularFormula = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMPOUND_CLASSES = "compoundClasses";
  private JsonNullable<CompoundClasses> compoundClasses = JsonNullable.<CompoundClasses>undefined();

  public static final String JSON_PROPERTY_SUPPORTING_FEATURE_IDS = "supportingFeatureIds";
  private JsonNullable<List<String>> supportingFeatureIds = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SELECTION_CRITERION = "selectionCriterion";
  private JsonNullable<ConsensusCriterionDeNovo> selectionCriterion = JsonNullable.<ConsensusCriterionDeNovo>undefined();

  public ConsensusAnnotationsDeNovo() { 
  }

  public ConsensusAnnotationsDeNovo molecularFormula(String molecularFormula) {
    this.molecularFormula = JsonNullable.<String>of(molecularFormula);
    return this;
  }

   /**
   * Molecular formula of the consensus annotation  Might be null if no consensus formula is available.
   * @return molecularFormula
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getMolecularFormula() {
        return molecularFormula.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOLECULAR_FORMULA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMolecularFormula_JsonNullable() {
    return molecularFormula;
  }
  
  @JsonProperty(JSON_PROPERTY_MOLECULAR_FORMULA)
  public void setMolecularFormula_JsonNullable(JsonNullable<String> molecularFormula) {
    this.molecularFormula = molecularFormula;
  }

  public void setMolecularFormula(String molecularFormula) {
    this.molecularFormula = JsonNullable.<String>of(molecularFormula);
  }


  public ConsensusAnnotationsDeNovo compoundClasses(CompoundClasses compoundClasses) {
    this.compoundClasses = JsonNullable.<CompoundClasses>of(compoundClasses);
    return this;
  }

   /**
   * Get compoundClasses
   * @return compoundClasses
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public CompoundClasses getCompoundClasses() {
        return compoundClasses.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPOUND_CLASSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CompoundClasses> getCompoundClasses_JsonNullable() {
    return compoundClasses;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPOUND_CLASSES)
  public void setCompoundClasses_JsonNullable(JsonNullable<CompoundClasses> compoundClasses) {
    this.compoundClasses = compoundClasses;
  }

  public void setCompoundClasses(CompoundClasses compoundClasses) {
    this.compoundClasses = JsonNullable.<CompoundClasses>of(compoundClasses);
  }


  public ConsensusAnnotationsDeNovo supportingFeatureIds(List<String> supportingFeatureIds) {
    this.supportingFeatureIds = JsonNullable.<List<String>>of(supportingFeatureIds);
    return this;
  }

  public ConsensusAnnotationsDeNovo addSupportingFeatureIdsItem(String supportingFeatureIdsItem) {
    if (this.supportingFeatureIds == null || !this.supportingFeatureIds.isPresent()) {
      this.supportingFeatureIds = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.supportingFeatureIds.get().add(supportingFeatureIdsItem);
    } catch (NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * FeatureIds where the topAnnotation supports this annotation.
   * @return supportingFeatureIds
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<String> getSupportingFeatureIds() {
        return supportingFeatureIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUPPORTING_FEATURE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getSupportingFeatureIds_JsonNullable() {
    return supportingFeatureIds;
  }
  
  @JsonProperty(JSON_PROPERTY_SUPPORTING_FEATURE_IDS)
  public void setSupportingFeatureIds_JsonNullable(JsonNullable<List<String>> supportingFeatureIds) {
    this.supportingFeatureIds = supportingFeatureIds;
  }

  public void setSupportingFeatureIds(List<String> supportingFeatureIds) {
    this.supportingFeatureIds = JsonNullable.<List<String>>of(supportingFeatureIds);
  }


  public ConsensusAnnotationsDeNovo selectionCriterion(ConsensusCriterionDeNovo selectionCriterion) {
    this.selectionCriterion = JsonNullable.<ConsensusCriterionDeNovo>of(selectionCriterion);
    return this;
  }

   /**
   * Get selectionCriterion
   * @return selectionCriterion
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public ConsensusCriterionDeNovo getSelectionCriterion() {
        return selectionCriterion.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SELECTION_CRITERION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ConsensusCriterionDeNovo> getSelectionCriterion_JsonNullable() {
    return selectionCriterion;
  }
  
  @JsonProperty(JSON_PROPERTY_SELECTION_CRITERION)
  public void setSelectionCriterion_JsonNullable(JsonNullable<ConsensusCriterionDeNovo> selectionCriterion) {
    this.selectionCriterion = selectionCriterion;
  }

  public void setSelectionCriterion(ConsensusCriterionDeNovo selectionCriterion) {
    this.selectionCriterion = JsonNullable.<ConsensusCriterionDeNovo>of(selectionCriterion);
  }


  /**
   * Return true if this ConsensusAnnotationsDeNovo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsensusAnnotationsDeNovo consensusAnnotationsDeNovo = (ConsensusAnnotationsDeNovo) o;
    return equalsNullable(this.molecularFormula, consensusAnnotationsDeNovo.molecularFormula) &&
        equalsNullable(this.compoundClasses, consensusAnnotationsDeNovo.compoundClasses) &&
        equalsNullable(this.supportingFeatureIds, consensusAnnotationsDeNovo.supportingFeatureIds) &&
        equalsNullable(this.selectionCriterion, consensusAnnotationsDeNovo.selectionCriterion);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(molecularFormula), hashCodeNullable(compoundClasses), hashCodeNullable(supportingFeatureIds), hashCodeNullable(selectionCriterion));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsensusAnnotationsDeNovo {\n");
    sb.append("    molecularFormula: ").append(toIndentedString(molecularFormula)).append("\n");
    sb.append("    compoundClasses: ").append(toIndentedString(compoundClasses)).append("\n");
    sb.append("    supportingFeatureIds: ").append(toIndentedString(supportingFeatureIds)).append("\n");
    sb.append("    selectionCriterion: ").append(toIndentedString(selectionCriterion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `molecularFormula` to the URL query string
    if (getMolecularFormula() != null) {
      joiner.add(String.format("%smolecularFormula%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMolecularFormula()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `compoundClasses` to the URL query string
    if (getCompoundClasses() != null) {
      joiner.add(getCompoundClasses().toUrlQueryString(prefix + "compoundClasses" + suffix));
    }

    // add `supportingFeatureIds` to the URL query string
    if (getSupportingFeatureIds() != null) {
      for (int i = 0; i < getSupportingFeatureIds().size(); i++) {
        joiner.add(String.format("%ssupportingFeatureIds%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getSupportingFeatureIds().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `selectionCriterion` to the URL query string
    if (getSelectionCriterion() != null) {
      joiner.add(String.format("%sselectionCriterion%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSelectionCriterion()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

