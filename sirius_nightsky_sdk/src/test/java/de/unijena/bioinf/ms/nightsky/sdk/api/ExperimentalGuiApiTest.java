/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6.0.0-SNAPSHOT
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.api;

import de.unijena.bioinf.ms.nightsky.sdk.client.ApiException;
import de.unijena.bioinf.ms.nightsky.sdk.model.GuiParameters;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for ExperimentalGuiApi
 */
@Ignore
public class ExperimentalGuiApiTest {

    private final ExperimentalGuiApi api = new ExperimentalGuiApi();

    
    /**
     * Apply given changes to the running GUI instance.
     *
     * Apply given changes to the running GUI instance.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void applyToGuiTest() throws ApiException {
        String projectId = null;
        GuiParameters guiParameters = null;
        
        api.applyToGui(projectId, guiParameters);
        
        // TODO: test validations
    }
    
    /**
     * Close GUI instance of given project-space if available.
     *
     * Close GUI instance of given project-space if available.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void closeGuiTest() throws ApiException {
        String projectId = null;
        
        api.closeGui(projectId);
        
        // TODO: test validations
    }
    
    /**
     * Open GUI instance on specified project-space and bring the GUI window to foreground.
     *
     * Open GUI instance on specified project-space and bring the GUI window to foreground.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void openGuiTest() throws ApiException {
        String projectId = null;
        Boolean readOnly = null;
        
        api.openGui(projectId, readOnly);
        
        // TODO: test validations
    }
    
}
