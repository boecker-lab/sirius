/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6.0.0-SNAPSHOT
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.api;

import de.unijena.bioinf.ms.nightsky.sdk.model.PageSearchableDatabase;
import de.unijena.bioinf.ms.nightsky.sdk.model.SearchableDatabase;
import de.unijena.bioinf.ms.nightsky.sdk.model.SearchableDatabaseParameters;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for SearchableDatabasesApi
 */
@Ignore
public class SearchableDatabasesApiTest {

    private final SearchableDatabasesApi api = new SearchableDatabasesApi();

    
    /**
     * 
     *
     * 
     */
    @Test
    public void addDatabaseTest()  {
        String databaseId = null;
        String pathToProject = null;
        SearchableDatabase response = api.addDatabase(databaseId, pathToProject);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void createDatabaseTest()  {
        String databaseId = null;
        SearchableDatabaseParameters searchableDatabaseParameters = null;
        SearchableDatabase response = api.createDatabase(databaseId, searchableDatabaseParameters);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void getDatabaseTest()  {
        String databaseId = null;
        Boolean includeStats = null;
        SearchableDatabase response = api.getDatabase(databaseId, includeStats);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void getDatabasesTest()  {
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        Boolean includeStats = null;
        PageSearchableDatabase response = api.getDatabases(page, size, sort, includeStats);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void removeDatabaseTest()  {
        String databaseId = null;
        Boolean delete = null;
        api.removeDatabase(databaseId, delete);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void updateDatabaseTest()  {
        String databaseId = null;
        SearchableDatabaseParameters searchableDatabaseParameters = null;
        SearchableDatabase response = api.updateDatabase(databaseId, searchableDatabaseParameters);

        // TODO: test validations
    }
    
}
