/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6.0.0-SNAPSHOT
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.api;

import de.unijena.bioinf.ms.nightsky.sdk.client.ApiException;
import de.unijena.bioinf.ms.nightsky.sdk.model.AlignedFeature;
import de.unijena.bioinf.ms.nightsky.sdk.model.AlignedFeatureOptField;
import de.unijena.bioinf.ms.nightsky.sdk.model.FormulaCandidate;
import de.unijena.bioinf.ms.nightsky.sdk.model.FormulaCandidateOptField;
import de.unijena.bioinf.ms.nightsky.sdk.model.PageAlignedFeature;
import de.unijena.bioinf.ms.nightsky.sdk.model.PageFormulaCandidate;
import de.unijena.bioinf.ms.nightsky.sdk.model.PageStructureCandidateFormula;
import de.unijena.bioinf.ms.nightsky.sdk.model.PageStructureCandidateScored;
import de.unijena.bioinf.ms.nightsky.sdk.model.SearchQueryType;
import de.unijena.bioinf.ms.nightsky.sdk.model.StructureCandidateOptField;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for FeaturesApi
 */
@Ignore
public class FeaturesApiTest {

    private final FeaturesApi api = new FeaturesApi();

    
    /**
     * Delete feature (aligned over runs) with the given identifier from the specified project-space.
     *
     * Delete feature (aligned over runs) with the given identifier from the specified project-space.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAlignedFeatureTest() throws ApiException {
        String projectId = null;
        String alignedFeatureId = null;
        
        api.deleteAlignedFeature(projectId, alignedFeatureId);
        
        // TODO: test validations
    }
    
    /**
     * Get feature (aligned over runs) with the given identifier from the specified project-space.
     *
     * Get feature (aligned over runs) with the given identifier from the specified project-space.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAlignedFeatureTest() throws ApiException {
        String projectId = null;
        String alignedFeatureId = null;
        List<AlignedFeatureOptField> optFields = null;
        AlignedFeature response = 
        api.getAlignedFeature(projectId, alignedFeatureId, optFields);
        
        // TODO: test validations
    }
    
    /**
     * Get all available features (aligned over runs) in the given project-space.
     *
     * Get all available features (aligned over runs) in the given project-space.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAlignedFeaturesTest() throws ApiException {
        String projectId = null;
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        String searchQuery = null;
        SearchQueryType querySyntax = null;
        List<AlignedFeatureOptField> optFields = null;
        PageAlignedFeature response = 
        api.getAlignedFeatures(projectId, page, size, sort, searchQuery, querySyntax, optFields);
        
        // TODO: test validations
    }
    
    /**
     * FormulaResultContainers for the given &#39;formulaId&#39; with minimal information.
     *
     * FormulaResultContainers for the given &#39;formulaId&#39; with minimal information.  Can be enriched with an optional results overview and formula candidate information.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFormulaCandidateTest() throws ApiException {
        String projectId = null;
        String alignedFeatureId = null;
        String formulaId = null;
        List<FormulaCandidateOptField> optFields = null;
        FormulaCandidate response = 
        api.getFormulaCandidate(projectId, alignedFeatureId, formulaId, optFields);
        
        // TODO: test validations
    }
    
    /**
     * List of all FormulaResultContainers available for this feature with minimal information.
     *
     * List of all FormulaResultContainers available for this feature with minimal information.  Can be enriched with an optional results overview.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFormulaCandidatesTest() throws ApiException {
        String projectId = null;
        String alignedFeatureId = null;
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        String searchQuery = null;
        SearchQueryType querySyntax = null;
        List<FormulaCandidateOptField> optFields = null;
        PageFormulaCandidate response = 
        api.getFormulaCandidates(projectId, alignedFeatureId, page, size, sort, searchQuery, querySyntax, optFields);
        
        // TODO: test validations
    }
    
    /**
     * List of StructureCandidates for the given &#39;alignedFeatureId&#39; with minimal information.
     *
     * List of StructureCandidates for the given &#39;alignedFeatureId&#39; with minimal information.  StructureCandidates can be enriched with molecular fingerprint, structure database links.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStructureCandidatesTest() throws ApiException {
        String projectId = null;
        String alignedFeatureId = null;
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        String searchQuery = null;
        SearchQueryType querySyntax = null;
        List<StructureCandidateOptField> optFields = null;
        PageStructureCandidateFormula response = 
        api.getStructureCandidates(projectId, alignedFeatureId, page, size, sort, searchQuery, querySyntax, optFields);
        
        // TODO: test validations
    }
    
    /**
     * List of StructureCandidates the given &#39;formulaId&#39; with minimal information.
     *
     * List of StructureCandidates the given &#39;formulaId&#39; with minimal information.  StructureCandidates can be enriched with molecular fingerprint, structure database links.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStructureCandidatesByFormulaTest() throws ApiException {
        String projectId = null;
        String alignedFeatureId = null;
        String formulaId = null;
        Integer page = null;
        Integer size = null;
        List<String> sort = null;
        String searchQuery = null;
        SearchQueryType querySyntax = null;
        List<StructureCandidateOptField> optFields = null;
        PageStructureCandidateScored response = 
        api.getStructureCandidatesByFormula(projectId, alignedFeatureId, formulaId, page, size, sort, searchQuery, querySyntax, optFields);
        
        // TODO: test validations
    }
    
}
