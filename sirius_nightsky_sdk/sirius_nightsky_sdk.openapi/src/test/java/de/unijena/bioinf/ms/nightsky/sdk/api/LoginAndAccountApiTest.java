/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6.0.0-SNAPSHOT
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.api;

import de.unijena.bioinf.ms.nightsky.sdk.model.AccountCredentials;
import de.unijena.bioinf.ms.nightsky.sdk.model.AccountInfo;
import de.unijena.bioinf.ms.nightsky.sdk.model.Subscription;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for LoginAndAccountApi
 */
@Ignore
public class LoginAndAccountApiTest {

    private final LoginAndAccountApi api = new LoginAndAccountApi();

    
    /**
     * Get information about the account currently logged in.
     *
     * Get information about the account currently logged in. Fails if not logged in.
     */
    @Test
    public void getAccountInfoTest()  {
        Boolean includeSubs = null;
        AccountInfo response = api.getAccountInfo(includeSubs);

        // TODO: test validations
    }
    
    /**
     * Get SignUp URL (For signUp via web browser)
     *
     * Get SignUp URL (For signUp via web browser)
     */
    @Test
    public void getSignUpURLTest()  {
        String response = api.getSignUpURL();

        // TODO: test validations
    }
    
    /**
     * Get available subscriptions of the account currently logged in.
     *
     * Get available subscriptions of the account currently logged in. Fails if not logged in.
     */
    @Test
    public void getSubscriptionsTest()  {
        List<Subscription> response = api.getSubscriptions();

        // TODO: test validations
    }
    
    /**
     * Check if a user is logged in.
     *
     * Check if a user is logged in.
     */
    @Test
    public void isLoggedInTest()  {
        Boolean response = api.isLoggedIn();

        // TODO: test validations
    }
    
    /**
     * Login into SIRIUS web services and activate default subscription if available.
     *
     * Login into SIRIUS web services and activate default subscription if available.
     */
    @Test
    public void loginTest()  {
        Boolean acceptTerms = null;
        AccountCredentials accountCredentials = null;
        Boolean failWhenLoggedIn = null;
        Boolean includeSubs = null;
        AccountInfo response = api.login(acceptTerms, accountCredentials, failWhenLoggedIn, includeSubs);

        // TODO: test validations
    }
    
    /**
     * Logout from SIRIUS web services.
     *
     * Logout from SIRIUS web services.
     */
    @Test
    public void logoutTest()  {
        api.logout();

        // TODO: test validations
    }
    
    /**
     * Open User portal in browser.
     *
     * Open User portal in browser. If user is logged in SIRIUS tries to transfer the login state to the browser.
     */
    @Test
    public void openPortalTest()  {
        api.openPortal();

        // TODO: test validations
    }
    
    /**
     * Select a subscription as active subscription to be used for computations.
     *
     * Select a subscription as active subscription to be used for computations.
     */
    @Test
    public void selectSubscriptionTest()  {
        String sid = null;
        AccountInfo response = api.selectSubscription(sid);

        // TODO: test validations
    }
    
    /**
     * Open SignUp window in system browser and return signUp link.
     *
     * Open SignUp window in system browser and return signUp link.
     */
    @Test
    public void signUpTest()  {
        String response = api.signUp();

        // TODO: test validations
    }
    
}
