/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6.0.0-SNAPSHOT
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * 
 */
@JsonPropertyOrder({
  FragmentNode.JSON_PROPERTY_ID,
  FragmentNode.JSON_PROPERTY_MOLECULAR_FORMULA,
  FragmentNode.JSON_PROPERTY_ION_TYPE,
  FragmentNode.JSON_PROPERTY_MASS_DEVIATION_DA,
  FragmentNode.JSON_PROPERTY_MASS_DEVIATION_PPM,
  FragmentNode.JSON_PROPERTY_SCORE,
  FragmentNode.JSON_PROPERTY_INTENSITY,
  FragmentNode.JSON_PROPERTY_MZ
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FragmentNode {
  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_MOLECULAR_FORMULA = "molecularFormula";
  private String molecularFormula;

  public static final String JSON_PROPERTY_ION_TYPE = "ionType";
  private String ionType;

  public static final String JSON_PROPERTY_MASS_DEVIATION_DA = "massDeviationDa";
  private Double massDeviationDa;

  public static final String JSON_PROPERTY_MASS_DEVIATION_PPM = "massDeviationPpm";
  private Double massDeviationPpm;

  public static final String JSON_PROPERTY_SCORE = "score";
  private Double score;

  public static final String JSON_PROPERTY_INTENSITY = "intensity";
  private Double intensity;

  public static final String JSON_PROPERTY_MZ = "mz";
  private Double mz;

  public FragmentNode() { 
  }

  public FragmentNode id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public FragmentNode molecularFormula(String molecularFormula) {
    this.molecularFormula = molecularFormula;
    return this;
  }

   /**
   * Get molecularFormula
   * @return molecularFormula
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MOLECULAR_FORMULA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMolecularFormula() {
    return molecularFormula;
  }


  @JsonProperty(JSON_PROPERTY_MOLECULAR_FORMULA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMolecularFormula(String molecularFormula) {
    this.molecularFormula = molecularFormula;
  }


  public FragmentNode ionType(String ionType) {
    this.ionType = ionType;
    return this;
  }

   /**
   * Get ionType
   * @return ionType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIonType() {
    return ionType;
  }


  @JsonProperty(JSON_PROPERTY_ION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIonType(String ionType) {
    this.ionType = ionType;
  }


  public FragmentNode massDeviationDa(Double massDeviationDa) {
    this.massDeviationDa = massDeviationDa;
    return this;
  }

   /**
   * Get massDeviationDa
   * @return massDeviationDa
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MASS_DEVIATION_DA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMassDeviationDa() {
    return massDeviationDa;
  }


  @JsonProperty(JSON_PROPERTY_MASS_DEVIATION_DA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMassDeviationDa(Double massDeviationDa) {
    this.massDeviationDa = massDeviationDa;
  }


  public FragmentNode massDeviationPpm(Double massDeviationPpm) {
    this.massDeviationPpm = massDeviationPpm;
    return this;
  }

   /**
   * Get massDeviationPpm
   * @return massDeviationPpm
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MASS_DEVIATION_PPM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMassDeviationPpm() {
    return massDeviationPpm;
  }


  @JsonProperty(JSON_PROPERTY_MASS_DEVIATION_PPM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMassDeviationPpm(Double massDeviationPpm) {
    this.massDeviationPpm = massDeviationPpm;
  }


  public FragmentNode score(Double score) {
    this.score = score;
    return this;
  }

   /**
   * Get score
   * @return score
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getScore() {
    return score;
  }


  @JsonProperty(JSON_PROPERTY_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScore(Double score) {
    this.score = score;
  }


  public FragmentNode intensity(Double intensity) {
    this.intensity = intensity;
    return this;
  }

   /**
   * Get intensity
   * @return intensity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTENSITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getIntensity() {
    return intensity;
  }


  @JsonProperty(JSON_PROPERTY_INTENSITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIntensity(Double intensity) {
    this.intensity = intensity;
  }


  public FragmentNode mz(Double mz) {
    this.mz = mz;
    return this;
  }

   /**
   * Get mz
   * @return mz
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MZ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getMz() {
    return mz;
  }


  @JsonProperty(JSON_PROPERTY_MZ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMz(Double mz) {
    this.mz = mz;
  }


  /**
   * Return true if this FragmentNode object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FragmentNode fragmentNode = (FragmentNode) o;
    return Objects.equals(this.id, fragmentNode.id) &&
        Objects.equals(this.molecularFormula, fragmentNode.molecularFormula) &&
        Objects.equals(this.ionType, fragmentNode.ionType) &&
        Objects.equals(this.massDeviationDa, fragmentNode.massDeviationDa) &&
        Objects.equals(this.massDeviationPpm, fragmentNode.massDeviationPpm) &&
        Objects.equals(this.score, fragmentNode.score) &&
        Objects.equals(this.intensity, fragmentNode.intensity) &&
        Objects.equals(this.mz, fragmentNode.mz);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, molecularFormula, ionType, massDeviationDa, massDeviationPpm, score, intensity, mz);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FragmentNode {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    molecularFormula: ").append(toIndentedString(molecularFormula)).append("\n");
    sb.append("    ionType: ").append(toIndentedString(ionType)).append("\n");
    sb.append("    massDeviationDa: ").append(toIndentedString(massDeviationDa)).append("\n");
    sb.append("    massDeviationPpm: ").append(toIndentedString(massDeviationPpm)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    intensity: ").append(toIndentedString(intensity)).append("\n");
    sb.append("    mz: ").append(toIndentedString(mz)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `molecularFormula` to the URL query string
    if (getMolecularFormula() != null) {
      joiner.add(String.format("%smolecularFormula%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMolecularFormula()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `ionType` to the URL query string
    if (getIonType() != null) {
      joiner.add(String.format("%sionType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getIonType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `massDeviationDa` to the URL query string
    if (getMassDeviationDa() != null) {
      joiner.add(String.format("%smassDeviationDa%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMassDeviationDa()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `massDeviationPpm` to the URL query string
    if (getMassDeviationPpm() != null) {
      joiner.add(String.format("%smassDeviationPpm%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMassDeviationPpm()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `score` to the URL query string
    if (getScore() != null) {
      joiner.add(String.format("%sscore%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getScore()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `intensity` to the URL query string
    if (getIntensity() != null) {
      joiner.add(String.format("%sintensity%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getIntensity()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `mz` to the URL query string
    if (getMz() != null) {
      joiner.add(String.format("%smz%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMz()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

