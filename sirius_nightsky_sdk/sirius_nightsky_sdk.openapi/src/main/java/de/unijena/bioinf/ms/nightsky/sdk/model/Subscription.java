/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6.0.0-SNAPSHOT
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * 
 */
@JsonPropertyOrder({
  Subscription.JSON_PROPERTY_SID,
  Subscription.JSON_PROPERTY_SUBSCRIBER_ID,
  Subscription.JSON_PROPERTY_SUBSCRIBER_NAME,
  Subscription.JSON_PROPERTY_EXPIRATION_DATE,
  Subscription.JSON_PROPERTY_START_DATE,
  Subscription.JSON_PROPERTY_COUNT_QUERIES,
  Subscription.JSON_PROPERTY_INSTANCE_LIMIT,
  Subscription.JSON_PROPERTY_INSTANCE_HASH_RECORDING_TIME,
  Subscription.JSON_PROPERTY_MAX_QUERIES_PER_INSTANCE,
  Subscription.JSON_PROPERTY_MAX_USER_ACCOUNTS,
  Subscription.JSON_PROPERTY_SERVICE_URL,
  Subscription.JSON_PROPERTY_DESCRIPTION,
  Subscription.JSON_PROPERTY_NAME,
  Subscription.JSON_PROPERTY_TOS,
  Subscription.JSON_PROPERTY_PP
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Subscription {
  public static final String JSON_PROPERTY_SID = "sid";
  private String sid;

  public static final String JSON_PROPERTY_SUBSCRIBER_ID = "subscriberId";
  private String subscriberId;

  public static final String JSON_PROPERTY_SUBSCRIBER_NAME = "subscriberName";
  private JsonNullable<String> subscriberName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXPIRATION_DATE = "expirationDate";
  private JsonNullable<OffsetDateTime> expirationDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  private JsonNullable<OffsetDateTime> startDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_COUNT_QUERIES = "countQueries";
  private JsonNullable<Boolean> countQueries = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_INSTANCE_LIMIT = "instanceLimit";
  private JsonNullable<Integer> instanceLimit = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_INSTANCE_HASH_RECORDING_TIME = "instanceHashRecordingTime";
  private JsonNullable<Integer> instanceHashRecordingTime = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_MAX_QUERIES_PER_INSTANCE = "maxQueriesPerInstance";
  private JsonNullable<Integer> maxQueriesPerInstance = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_MAX_USER_ACCOUNTS = "maxUserAccounts";
  private JsonNullable<Integer> maxUserAccounts = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_SERVICE_URL = "serviceUrl";
  private String serviceUrl;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TOS = "tos";
  private JsonNullable<String> tos = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PP = "pp";
  private JsonNullable<String> pp = JsonNullable.<String>undefined();

  public Subscription() { 
  }

  public Subscription sid(String sid) {
    this.sid = sid;
    return this;
  }

   /**
   * Unique identifier of this subscription
   * @return sid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSid() {
    return sid;
  }


  @JsonProperty(JSON_PROPERTY_SID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSid(String sid) {
    this.sid = sid;
  }


  public Subscription subscriberId(String subscriberId) {
    this.subscriberId = subscriberId;
    return this;
  }

   /**
   * ID of the owner of the subscription.  This can be the ID of any SubscriptionOwner (e.g.  Group or  User)  depending on the level on which a subscription should be is valid.
   * @return subscriberId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIBER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubscriberId() {
    return subscriberId;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIBER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriberId(String subscriberId) {
    this.subscriberId = subscriberId;
  }


  public Subscription subscriberName(String subscriberName) {
    this.subscriberName = JsonNullable.<String>of(subscriberName);
    return this;
  }

   /**
   * Optional name of the owner of this subscription
   * @return subscriberName
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getSubscriberName() {
        return subscriberName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBSCRIBER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubscriberName_JsonNullable() {
    return subscriberName;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBSCRIBER_NAME)
  public void setSubscriberName_JsonNullable(JsonNullable<String> subscriberName) {
    this.subscriberName = subscriberName;
  }

  public void setSubscriberName(String subscriberName) {
    this.subscriberName = JsonNullable.<String>of(subscriberName);
  }


  public Subscription expirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = JsonNullable.<OffsetDateTime>of(expirationDate);
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getExpirationDate() {
        return expirationDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getExpirationDate_JsonNullable() {
    return expirationDate;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  public void setExpirationDate_JsonNullable(JsonNullable<OffsetDateTime> expirationDate) {
    this.expirationDate = expirationDate;
  }

  public void setExpirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = JsonNullable.<OffsetDateTime>of(expirationDate);
  }


  public Subscription startDate(OffsetDateTime startDate) {
    this.startDate = JsonNullable.<OffsetDateTime>of(startDate);
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getStartDate() {
        return startDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getStartDate_JsonNullable() {
    return startDate;
  }
  
  @JsonProperty(JSON_PROPERTY_START_DATE)
  public void setStartDate_JsonNullable(JsonNullable<OffsetDateTime> startDate) {
    this.startDate = startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = JsonNullable.<OffsetDateTime>of(startDate);
  }


  public Subscription countQueries(Boolean countQueries) {
    this.countQueries = JsonNullable.<Boolean>of(countQueries);
    return this;
  }

   /**
   * Get countQueries
   * @return countQueries
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Boolean getCountQueries() {
        return countQueries.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COUNT_QUERIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getCountQueries_JsonNullable() {
    return countQueries;
  }
  
  @JsonProperty(JSON_PROPERTY_COUNT_QUERIES)
  public void setCountQueries_JsonNullable(JsonNullable<Boolean> countQueries) {
    this.countQueries = countQueries;
  }

  public void setCountQueries(Boolean countQueries) {
    this.countQueries = JsonNullable.<Boolean>of(countQueries);
  }


  public Subscription instanceLimit(Integer instanceLimit) {
    this.instanceLimit = JsonNullable.<Integer>of(instanceLimit);
    return this;
  }

   /**
   * Limit of instances (features) that can be computed with this subscription
   * @return instanceLimit
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getInstanceLimit() {
        return instanceLimit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INSTANCE_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getInstanceLimit_JsonNullable() {
    return instanceLimit;
  }
  
  @JsonProperty(JSON_PROPERTY_INSTANCE_LIMIT)
  public void setInstanceLimit_JsonNullable(JsonNullable<Integer> instanceLimit) {
    this.instanceLimit = instanceLimit;
  }

  public void setInstanceLimit(Integer instanceLimit) {
    this.instanceLimit = JsonNullable.<Integer>of(instanceLimit);
  }


  public Subscription instanceHashRecordingTime(Integer instanceHashRecordingTime) {
    this.instanceHashRecordingTime = JsonNullable.<Integer>of(instanceHashRecordingTime);
    return this;
  }

   /**
   * Hash is used to allow recomputing identical data without increasing counted instances (features).  The recording time is the amount of time an instance is memorized is
   * @return instanceHashRecordingTime
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getInstanceHashRecordingTime() {
        return instanceHashRecordingTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INSTANCE_HASH_RECORDING_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getInstanceHashRecordingTime_JsonNullable() {
    return instanceHashRecordingTime;
  }
  
  @JsonProperty(JSON_PROPERTY_INSTANCE_HASH_RECORDING_TIME)
  public void setInstanceHashRecordingTime_JsonNullable(JsonNullable<Integer> instanceHashRecordingTime) {
    this.instanceHashRecordingTime = instanceHashRecordingTime;
  }

  public void setInstanceHashRecordingTime(Integer instanceHashRecordingTime) {
    this.instanceHashRecordingTime = JsonNullable.<Integer>of(instanceHashRecordingTime);
  }


  public Subscription maxQueriesPerInstance(Integer maxQueriesPerInstance) {
    this.maxQueriesPerInstance = JsonNullable.<Integer>of(maxQueriesPerInstance);
    return this;
  }

   /**
   * Maximum number of queries (e.g. prediction) that can be performed  for one instance before it is counted another time.
   * @return maxQueriesPerInstance
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getMaxQueriesPerInstance() {
        return maxQueriesPerInstance.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_QUERIES_PER_INSTANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getMaxQueriesPerInstance_JsonNullable() {
    return maxQueriesPerInstance;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_QUERIES_PER_INSTANCE)
  public void setMaxQueriesPerInstance_JsonNullable(JsonNullable<Integer> maxQueriesPerInstance) {
    this.maxQueriesPerInstance = maxQueriesPerInstance;
  }

  public void setMaxQueriesPerInstance(Integer maxQueriesPerInstance) {
    this.maxQueriesPerInstance = JsonNullable.<Integer>of(maxQueriesPerInstance);
  }


  public Subscription maxUserAccounts(Integer maxUserAccounts) {
    this.maxUserAccounts = JsonNullable.<Integer>of(maxUserAccounts);
    return this;
  }

   /**
   * Get maxUserAccounts
   * @return maxUserAccounts
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getMaxUserAccounts() {
        return maxUserAccounts.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_USER_ACCOUNTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getMaxUserAccounts_JsonNullable() {
    return maxUserAccounts;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_USER_ACCOUNTS)
  public void setMaxUserAccounts_JsonNullable(JsonNullable<Integer> maxUserAccounts) {
    this.maxUserAccounts = maxUserAccounts;
  }

  public void setMaxUserAccounts(Integer maxUserAccounts) {
    this.maxUserAccounts = JsonNullable.<Integer>of(maxUserAccounts);
  }


  public Subscription serviceUrl(String serviceUrl) {
    this.serviceUrl = serviceUrl;
    return this;
  }

   /**
   * Get serviceUrl
   * @return serviceUrl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getServiceUrl() {
    return serviceUrl;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceUrl(String serviceUrl) {
    this.serviceUrl = serviceUrl;
  }


  public Subscription description(String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public Subscription name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public Subscription tos(String tos) {
    this.tos = JsonNullable.<String>of(tos);
    return this;
  }

   /**
   * Get tos
   * @return tos
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getTos() {
        return tos.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTos_JsonNullable() {
    return tos;
  }
  
  @JsonProperty(JSON_PROPERTY_TOS)
  public void setTos_JsonNullable(JsonNullable<String> tos) {
    this.tos = tos;
  }

  public void setTos(String tos) {
    this.tos = JsonNullable.<String>of(tos);
  }


  public Subscription pp(String pp) {
    this.pp = JsonNullable.<String>of(pp);
    return this;
  }

   /**
   * Get pp
   * @return pp
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getPp() {
        return pp.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPp_JsonNullable() {
    return pp;
  }
  
  @JsonProperty(JSON_PROPERTY_PP)
  public void setPp_JsonNullable(JsonNullable<String> pp) {
    this.pp = pp;
  }

  public void setPp(String pp) {
    this.pp = JsonNullable.<String>of(pp);
  }


  /**
   * Return true if this Subscription object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Subscription subscription = (Subscription) o;
    return Objects.equals(this.sid, subscription.sid) &&
        Objects.equals(this.subscriberId, subscription.subscriberId) &&
        equalsNullable(this.subscriberName, subscription.subscriberName) &&
        equalsNullable(this.expirationDate, subscription.expirationDate) &&
        equalsNullable(this.startDate, subscription.startDate) &&
        equalsNullable(this.countQueries, subscription.countQueries) &&
        equalsNullable(this.instanceLimit, subscription.instanceLimit) &&
        equalsNullable(this.instanceHashRecordingTime, subscription.instanceHashRecordingTime) &&
        equalsNullable(this.maxQueriesPerInstance, subscription.maxQueriesPerInstance) &&
        equalsNullable(this.maxUserAccounts, subscription.maxUserAccounts) &&
        Objects.equals(this.serviceUrl, subscription.serviceUrl) &&
        equalsNullable(this.description, subscription.description) &&
        equalsNullable(this.name, subscription.name) &&
        equalsNullable(this.tos, subscription.tos) &&
        equalsNullable(this.pp, subscription.pp);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(sid, subscriberId, hashCodeNullable(subscriberName), hashCodeNullable(expirationDate), hashCodeNullable(startDate), hashCodeNullable(countQueries), hashCodeNullable(instanceLimit), hashCodeNullable(instanceHashRecordingTime), hashCodeNullable(maxQueriesPerInstance), hashCodeNullable(maxUserAccounts), serviceUrl, hashCodeNullable(description), hashCodeNullable(name), hashCodeNullable(tos), hashCodeNullable(pp));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Subscription {\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    subscriberId: ").append(toIndentedString(subscriberId)).append("\n");
    sb.append("    subscriberName: ").append(toIndentedString(subscriberName)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    countQueries: ").append(toIndentedString(countQueries)).append("\n");
    sb.append("    instanceLimit: ").append(toIndentedString(instanceLimit)).append("\n");
    sb.append("    instanceHashRecordingTime: ").append(toIndentedString(instanceHashRecordingTime)).append("\n");
    sb.append("    maxQueriesPerInstance: ").append(toIndentedString(maxQueriesPerInstance)).append("\n");
    sb.append("    maxUserAccounts: ").append(toIndentedString(maxUserAccounts)).append("\n");
    sb.append("    serviceUrl: ").append(toIndentedString(serviceUrl)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    tos: ").append(toIndentedString(tos)).append("\n");
    sb.append("    pp: ").append(toIndentedString(pp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `sid` to the URL query string
    if (getSid() != null) {
      joiner.add(String.format("%ssid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSid()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `subscriberId` to the URL query string
    if (getSubscriberId() != null) {
      joiner.add(String.format("%ssubscriberId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSubscriberId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `subscriberName` to the URL query string
    if (getSubscriberName() != null) {
      joiner.add(String.format("%ssubscriberName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSubscriberName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `expirationDate` to the URL query string
    if (getExpirationDate() != null) {
      joiner.add(String.format("%sexpirationDate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getExpirationDate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `startDate` to the URL query string
    if (getStartDate() != null) {
      joiner.add(String.format("%sstartDate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStartDate()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `countQueries` to the URL query string
    if (getCountQueries() != null) {
      joiner.add(String.format("%scountQueries%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCountQueries()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `instanceLimit` to the URL query string
    if (getInstanceLimit() != null) {
      joiner.add(String.format("%sinstanceLimit%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getInstanceLimit()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `instanceHashRecordingTime` to the URL query string
    if (getInstanceHashRecordingTime() != null) {
      joiner.add(String.format("%sinstanceHashRecordingTime%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getInstanceHashRecordingTime()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `maxQueriesPerInstance` to the URL query string
    if (getMaxQueriesPerInstance() != null) {
      joiner.add(String.format("%smaxQueriesPerInstance%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMaxQueriesPerInstance()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `maxUserAccounts` to the URL query string
    if (getMaxUserAccounts() != null) {
      joiner.add(String.format("%smaxUserAccounts%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMaxUserAccounts()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `serviceUrl` to the URL query string
    if (getServiceUrl() != null) {
      joiner.add(String.format("%sserviceUrl%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getServiceUrl()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDescription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `name` to the URL query string
    if (getName() != null) {
      joiner.add(String.format("%sname%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `tos` to the URL query string
    if (getTos() != null) {
      joiner.add(String.format("%stos%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTos()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `pp` to the URL query string
    if (getPp() != null) {
      joiner.add(String.format("%spp%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPp()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

