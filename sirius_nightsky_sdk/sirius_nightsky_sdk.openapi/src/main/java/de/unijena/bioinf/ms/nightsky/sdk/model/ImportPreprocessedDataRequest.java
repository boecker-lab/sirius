/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6.0.0-SNAPSHOT
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ImportPreprocessedDataRequest
 */
@JsonPropertyOrder({
  ImportPreprocessedDataRequest.JSON_PROPERTY_INPUT_FILES
})
@JsonTypeName("importPreprocessedData_request")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ImportPreprocessedDataRequest {
  public static final String JSON_PROPERTY_INPUT_FILES = "inputFiles";
  private List<File> inputFiles;

  public ImportPreprocessedDataRequest() {
  }

  public ImportPreprocessedDataRequest inputFiles(List<File> inputFiles) {
    
    this.inputFiles = inputFiles;
    return this;
  }

  public ImportPreprocessedDataRequest addInputFilesItem(File inputFilesItem) {
    if (this.inputFiles == null) {
      this.inputFiles = new ArrayList<>();
    }
    this.inputFiles.add(inputFilesItem);
    return this;
  }

   /**
   * Get inputFiles
   * @return inputFiles
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUT_FILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<File> getInputFiles() {
    return inputFiles;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_FILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputFiles(List<File> inputFiles) {
    this.inputFiles = inputFiles;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImportPreprocessedDataRequest importPreprocessedDataRequest = (ImportPreprocessedDataRequest) o;
    return Objects.equals(this.inputFiles, importPreprocessedDataRequest.inputFiles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inputFiles);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImportPreprocessedDataRequest {\n");
    sb.append("    inputFiles: ").append(toIndentedString(inputFiles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

