/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6.0.0-SNAPSHOT
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * 
 */
@JsonPropertyOrder({
  BinaryFingerprint.JSON_PROPERTY_BITS_SET,
  BinaryFingerprint.JSON_PROPERTY_LENGTH
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BinaryFingerprint {
  public static final String JSON_PROPERTY_BITS_SET = "bitsSet";
  private List<Integer> bitsSet;

  public static final String JSON_PROPERTY_LENGTH = "length";
  private Integer length;

  public BinaryFingerprint() { 
  }

  public BinaryFingerprint bitsSet(List<Integer> bitsSet) {
    this.bitsSet = bitsSet;
    return this;
  }

  public BinaryFingerprint addBitsSetItem(Integer bitsSetItem) {
    if (this.bitsSet == null) {
      this.bitsSet = new ArrayList<>();
    }
    this.bitsSet.add(bitsSetItem);
    return this;
  }

   /**
   * Array that contains all indices of bits that are set (are 1)
   * @return bitsSet
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BITS_SET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Integer> getBitsSet() {
    return bitsSet;
  }


  @JsonProperty(JSON_PROPERTY_BITS_SET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBitsSet(List<Integer> bitsSet) {
    this.bitsSet = bitsSet;
  }


  public BinaryFingerprint length(Integer length) {
    this.length = length;
    return this;
  }

   /**
   * Size of the fingerprint, e.g. to reconstruct the binary array from the array of set bits
   * @return length
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLength() {
    return length;
  }


  @JsonProperty(JSON_PROPERTY_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLength(Integer length) {
    this.length = length;
  }


  /**
   * Return true if this BinaryFingerprint object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BinaryFingerprint binaryFingerprint = (BinaryFingerprint) o;
    return Objects.equals(this.bitsSet, binaryFingerprint.bitsSet) &&
        Objects.equals(this.length, binaryFingerprint.length);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bitsSet, length);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BinaryFingerprint {\n");
    sb.append("    bitsSet: ").append(toIndentedString(bitsSet)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `bitsSet` to the URL query string
    if (getBitsSet() != null) {
      for (int i = 0; i < getBitsSet().size(); i++) {
        joiner.add(String.format("%sbitsSet%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getBitsSet().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `length` to the URL query string
    if (getLength() != null) {
      joiner.add(String.format("%slength%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLength()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

