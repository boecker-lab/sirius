/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6.0.0-SNAPSHOT
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.unijena.bioinf.ms.nightsky.sdk.model.AnnotatedSpectrum;
import de.unijena.bioinf.ms.nightsky.sdk.model.CanopusPrediction;
import de.unijena.bioinf.ms.nightsky.sdk.model.CompoundClasses;
import de.unijena.bioinf.ms.nightsky.sdk.model.Deviation;
import de.unijena.bioinf.ms.nightsky.sdk.model.FragmentationTree;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Molecular formula candidate that holds a unique identifier (molecular formula + adduct).  It can be extended with optional scoring metrics and the raw results  such as fragmentation trees and simulated isotope pattern.
 */
@JsonPropertyOrder({
  FormulaCandidate.JSON_PROPERTY_FORMULA_ID,
  FormulaCandidate.JSON_PROPERTY_MOLECULAR_FORMULA,
  FormulaCandidate.JSON_PROPERTY_ADDUCT,
  FormulaCandidate.JSON_PROPERTY_SIRIUS_SCORE,
  FormulaCandidate.JSON_PROPERTY_ISOTOPE_SCORE,
  FormulaCandidate.JSON_PROPERTY_TREE_SCORE,
  FormulaCandidate.JSON_PROPERTY_ZODIAC_SCORE,
  FormulaCandidate.JSON_PROPERTY_NUM_OF_EXPLAINED_PEAKS,
  FormulaCandidate.JSON_PROPERTY_NUM_OF_EXPLAINABLE_PEAKS,
  FormulaCandidate.JSON_PROPERTY_TOTAL_EXPLAINED_INTENSITY,
  FormulaCandidate.JSON_PROPERTY_MEDIAN_MASS_DEVIATION,
  FormulaCandidate.JSON_PROPERTY_FRAGMENTATION_TREE,
  FormulaCandidate.JSON_PROPERTY_SIMULATED_ISOTOPE_PATTERN,
  FormulaCandidate.JSON_PROPERTY_PREDICTED_FINGERPRINT,
  FormulaCandidate.JSON_PROPERTY_COMPOUND_CLASSES,
  FormulaCandidate.JSON_PROPERTY_CANOPUS_PREDICTION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FormulaCandidate {
  public static final String JSON_PROPERTY_FORMULA_ID = "formulaId";
  private String formulaId;

  public static final String JSON_PROPERTY_MOLECULAR_FORMULA = "molecularFormula";
  private String molecularFormula;

  public static final String JSON_PROPERTY_ADDUCT = "adduct";
  private String adduct;

  public static final String JSON_PROPERTY_SIRIUS_SCORE = "siriusScore";
  private JsonNullable<Double> siriusScore = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ISOTOPE_SCORE = "isotopeScore";
  private JsonNullable<Double> isotopeScore = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TREE_SCORE = "treeScore";
  private JsonNullable<Double> treeScore = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ZODIAC_SCORE = "zodiacScore";
  private JsonNullable<Double> zodiacScore = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_NUM_OF_EXPLAINED_PEAKS = "numOfExplainedPeaks";
  private JsonNullable<Integer> numOfExplainedPeaks = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_NUM_OF_EXPLAINABLE_PEAKS = "numOfExplainablePeaks";
  private JsonNullable<Integer> numOfExplainablePeaks = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_TOTAL_EXPLAINED_INTENSITY = "totalExplainedIntensity";
  private JsonNullable<Double> totalExplainedIntensity = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MEDIAN_MASS_DEVIATION = "medianMassDeviation";
  private JsonNullable<Deviation> medianMassDeviation = JsonNullable.<Deviation>undefined();

  public static final String JSON_PROPERTY_FRAGMENTATION_TREE = "fragmentationTree";
  private JsonNullable<FragmentationTree> fragmentationTree = JsonNullable.<FragmentationTree>undefined();

  public static final String JSON_PROPERTY_SIMULATED_ISOTOPE_PATTERN = "simulatedIsotopePattern";
  private JsonNullable<AnnotatedSpectrum> simulatedIsotopePattern = JsonNullable.<AnnotatedSpectrum>undefined();

  public static final String JSON_PROPERTY_PREDICTED_FINGERPRINT = "predictedFingerprint";
  private JsonNullable<List<Double>> predictedFingerprint = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_COMPOUND_CLASSES = "compoundClasses";
  private JsonNullable<CompoundClasses> compoundClasses = JsonNullable.<CompoundClasses>undefined();

  public static final String JSON_PROPERTY_CANOPUS_PREDICTION = "canopusPrediction";
  private JsonNullable<CanopusPrediction> canopusPrediction = JsonNullable.<CanopusPrediction>undefined();

  public FormulaCandidate() { 
  }

  public FormulaCandidate formulaId(String formulaId) {
    this.formulaId = formulaId;
    return this;
  }

   /**
   * Unique identifier of this formula candidate
   * @return formulaId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORMULA_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFormulaId() {
    return formulaId;
  }


  @JsonProperty(JSON_PROPERTY_FORMULA_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormulaId(String formulaId) {
    this.formulaId = formulaId;
  }


  public FormulaCandidate molecularFormula(String molecularFormula) {
    this.molecularFormula = molecularFormula;
    return this;
  }

   /**
   * molecular formula of this formula candidate
   * @return molecularFormula
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MOLECULAR_FORMULA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMolecularFormula() {
    return molecularFormula;
  }


  @JsonProperty(JSON_PROPERTY_MOLECULAR_FORMULA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMolecularFormula(String molecularFormula) {
    this.molecularFormula = molecularFormula;
  }


  public FormulaCandidate adduct(String adduct) {
    this.adduct = adduct;
    return this;
  }

   /**
   * Adduct of this formula candidate
   * @return adduct
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdduct() {
    return adduct;
  }


  @JsonProperty(JSON_PROPERTY_ADDUCT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdduct(String adduct) {
    this.adduct = adduct;
  }


  public FormulaCandidate siriusScore(Double siriusScore) {
    this.siriusScore = JsonNullable.<Double>of(siriusScore);
    return this;
  }

   /**
   * Sirius Score (isotope + tree score) of the formula candidate.  If NULL result is not available
   * @return siriusScore
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Double getSiriusScore() {
        return siriusScore.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIRIUS_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSiriusScore_JsonNullable() {
    return siriusScore;
  }
  
  @JsonProperty(JSON_PROPERTY_SIRIUS_SCORE)
  public void setSiriusScore_JsonNullable(JsonNullable<Double> siriusScore) {
    this.siriusScore = siriusScore;
  }

  public void setSiriusScore(Double siriusScore) {
    this.siriusScore = JsonNullable.<Double>of(siriusScore);
  }


  public FormulaCandidate isotopeScore(Double isotopeScore) {
    this.isotopeScore = JsonNullable.<Double>of(isotopeScore);
    return this;
  }

   /**
   * Get isotopeScore
   * @return isotopeScore
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Double getIsotopeScore() {
        return isotopeScore.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ISOTOPE_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getIsotopeScore_JsonNullable() {
    return isotopeScore;
  }
  
  @JsonProperty(JSON_PROPERTY_ISOTOPE_SCORE)
  public void setIsotopeScore_JsonNullable(JsonNullable<Double> isotopeScore) {
    this.isotopeScore = isotopeScore;
  }

  public void setIsotopeScore(Double isotopeScore) {
    this.isotopeScore = JsonNullable.<Double>of(isotopeScore);
  }


  public FormulaCandidate treeScore(Double treeScore) {
    this.treeScore = JsonNullable.<Double>of(treeScore);
    return this;
  }

   /**
   * Get treeScore
   * @return treeScore
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Double getTreeScore() {
        return treeScore.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TREE_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTreeScore_JsonNullable() {
    return treeScore;
  }
  
  @JsonProperty(JSON_PROPERTY_TREE_SCORE)
  public void setTreeScore_JsonNullable(JsonNullable<Double> treeScore) {
    this.treeScore = treeScore;
  }

  public void setTreeScore(Double treeScore) {
    this.treeScore = JsonNullable.<Double>of(treeScore);
  }


  public FormulaCandidate zodiacScore(Double zodiacScore) {
    this.zodiacScore = JsonNullable.<Double>of(zodiacScore);
    return this;
  }

   /**
   * Zodiac Score of the formula candidate.  If NULL result is not available
   * @return zodiacScore
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Double getZodiacScore() {
        return zodiacScore.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ZODIAC_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getZodiacScore_JsonNullable() {
    return zodiacScore;
  }
  
  @JsonProperty(JSON_PROPERTY_ZODIAC_SCORE)
  public void setZodiacScore_JsonNullable(JsonNullable<Double> zodiacScore) {
    this.zodiacScore = zodiacScore;
  }

  public void setZodiacScore(Double zodiacScore) {
    this.zodiacScore = JsonNullable.<Double>of(zodiacScore);
  }


  public FormulaCandidate numOfExplainedPeaks(Integer numOfExplainedPeaks) {
    this.numOfExplainedPeaks = JsonNullable.<Integer>of(numOfExplainedPeaks);
    return this;
  }

   /**
   * Get numOfExplainedPeaks
   * @return numOfExplainedPeaks
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getNumOfExplainedPeaks() {
        return numOfExplainedPeaks.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUM_OF_EXPLAINED_PEAKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getNumOfExplainedPeaks_JsonNullable() {
    return numOfExplainedPeaks;
  }
  
  @JsonProperty(JSON_PROPERTY_NUM_OF_EXPLAINED_PEAKS)
  public void setNumOfExplainedPeaks_JsonNullable(JsonNullable<Integer> numOfExplainedPeaks) {
    this.numOfExplainedPeaks = numOfExplainedPeaks;
  }

  public void setNumOfExplainedPeaks(Integer numOfExplainedPeaks) {
    this.numOfExplainedPeaks = JsonNullable.<Integer>of(numOfExplainedPeaks);
  }


  public FormulaCandidate numOfExplainablePeaks(Integer numOfExplainablePeaks) {
    this.numOfExplainablePeaks = JsonNullable.<Integer>of(numOfExplainablePeaks);
    return this;
  }

   /**
   * Get numOfExplainablePeaks
   * @return numOfExplainablePeaks
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getNumOfExplainablePeaks() {
        return numOfExplainablePeaks.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUM_OF_EXPLAINABLE_PEAKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getNumOfExplainablePeaks_JsonNullable() {
    return numOfExplainablePeaks;
  }
  
  @JsonProperty(JSON_PROPERTY_NUM_OF_EXPLAINABLE_PEAKS)
  public void setNumOfExplainablePeaks_JsonNullable(JsonNullable<Integer> numOfExplainablePeaks) {
    this.numOfExplainablePeaks = numOfExplainablePeaks;
  }

  public void setNumOfExplainablePeaks(Integer numOfExplainablePeaks) {
    this.numOfExplainablePeaks = JsonNullable.<Integer>of(numOfExplainablePeaks);
  }


  public FormulaCandidate totalExplainedIntensity(Double totalExplainedIntensity) {
    this.totalExplainedIntensity = JsonNullable.<Double>of(totalExplainedIntensity);
    return this;
  }

   /**
   * Get totalExplainedIntensity
   * @return totalExplainedIntensity
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Double getTotalExplainedIntensity() {
        return totalExplainedIntensity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_EXPLAINED_INTENSITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTotalExplainedIntensity_JsonNullable() {
    return totalExplainedIntensity;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_EXPLAINED_INTENSITY)
  public void setTotalExplainedIntensity_JsonNullable(JsonNullable<Double> totalExplainedIntensity) {
    this.totalExplainedIntensity = totalExplainedIntensity;
  }

  public void setTotalExplainedIntensity(Double totalExplainedIntensity) {
    this.totalExplainedIntensity = JsonNullable.<Double>of(totalExplainedIntensity);
  }


  public FormulaCandidate medianMassDeviation(Deviation medianMassDeviation) {
    this.medianMassDeviation = JsonNullable.<Deviation>of(medianMassDeviation);
    return this;
  }

   /**
   * Get medianMassDeviation
   * @return medianMassDeviation
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Deviation getMedianMassDeviation() {
        return medianMassDeviation.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MEDIAN_MASS_DEVIATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Deviation> getMedianMassDeviation_JsonNullable() {
    return medianMassDeviation;
  }
  
  @JsonProperty(JSON_PROPERTY_MEDIAN_MASS_DEVIATION)
  public void setMedianMassDeviation_JsonNullable(JsonNullable<Deviation> medianMassDeviation) {
    this.medianMassDeviation = medianMassDeviation;
  }

  public void setMedianMassDeviation(Deviation medianMassDeviation) {
    this.medianMassDeviation = JsonNullable.<Deviation>of(medianMassDeviation);
  }


  public FormulaCandidate fragmentationTree(FragmentationTree fragmentationTree) {
    this.fragmentationTree = JsonNullable.<FragmentationTree>of(fragmentationTree);
    return this;
  }

   /**
   * Get fragmentationTree
   * @return fragmentationTree
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public FragmentationTree getFragmentationTree() {
        return fragmentationTree.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FRAGMENTATION_TREE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<FragmentationTree> getFragmentationTree_JsonNullable() {
    return fragmentationTree;
  }
  
  @JsonProperty(JSON_PROPERTY_FRAGMENTATION_TREE)
  public void setFragmentationTree_JsonNullable(JsonNullable<FragmentationTree> fragmentationTree) {
    this.fragmentationTree = fragmentationTree;
  }

  public void setFragmentationTree(FragmentationTree fragmentationTree) {
    this.fragmentationTree = JsonNullable.<FragmentationTree>of(fragmentationTree);
  }


  public FormulaCandidate simulatedIsotopePattern(AnnotatedSpectrum simulatedIsotopePattern) {
    this.simulatedIsotopePattern = JsonNullable.<AnnotatedSpectrum>of(simulatedIsotopePattern);
    return this;
  }

   /**
   * Get simulatedIsotopePattern
   * @return simulatedIsotopePattern
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public AnnotatedSpectrum getSimulatedIsotopePattern() {
        return simulatedIsotopePattern.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIMULATED_ISOTOPE_PATTERN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AnnotatedSpectrum> getSimulatedIsotopePattern_JsonNullable() {
    return simulatedIsotopePattern;
  }
  
  @JsonProperty(JSON_PROPERTY_SIMULATED_ISOTOPE_PATTERN)
  public void setSimulatedIsotopePattern_JsonNullable(JsonNullable<AnnotatedSpectrum> simulatedIsotopePattern) {
    this.simulatedIsotopePattern = simulatedIsotopePattern;
  }

  public void setSimulatedIsotopePattern(AnnotatedSpectrum simulatedIsotopePattern) {
    this.simulatedIsotopePattern = JsonNullable.<AnnotatedSpectrum>of(simulatedIsotopePattern);
  }


  public FormulaCandidate predictedFingerprint(List<Double> predictedFingerprint) {
    this.predictedFingerprint = JsonNullable.<List<Double>>of(predictedFingerprint);
    return this;
  }

  public FormulaCandidate addPredictedFingerprintItem(Double predictedFingerprintItem) {
    if (this.predictedFingerprint == null || !this.predictedFingerprint.isPresent()) {
      this.predictedFingerprint = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.predictedFingerprint.get().add(predictedFingerprintItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Probabilistic molecular fingerprint predicted by CSI:FingerID
   * @return predictedFingerprint
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public List<Double> getPredictedFingerprint() {
        return predictedFingerprint.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PREDICTED_FINGERPRINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getPredictedFingerprint_JsonNullable() {
    return predictedFingerprint;
  }
  
  @JsonProperty(JSON_PROPERTY_PREDICTED_FINGERPRINT)
  public void setPredictedFingerprint_JsonNullable(JsonNullable<List<Double>> predictedFingerprint) {
    this.predictedFingerprint = predictedFingerprint;
  }

  public void setPredictedFingerprint(List<Double> predictedFingerprint) {
    this.predictedFingerprint = JsonNullable.<List<Double>>of(predictedFingerprint);
  }


  public FormulaCandidate compoundClasses(CompoundClasses compoundClasses) {
    this.compoundClasses = JsonNullable.<CompoundClasses>of(compoundClasses);
    return this;
  }

   /**
   * Get compoundClasses
   * @return compoundClasses
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public CompoundClasses getCompoundClasses() {
        return compoundClasses.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPOUND_CLASSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CompoundClasses> getCompoundClasses_JsonNullable() {
    return compoundClasses;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPOUND_CLASSES)
  public void setCompoundClasses_JsonNullable(JsonNullable<CompoundClasses> compoundClasses) {
    this.compoundClasses = compoundClasses;
  }

  public void setCompoundClasses(CompoundClasses compoundClasses) {
    this.compoundClasses = JsonNullable.<CompoundClasses>of(compoundClasses);
  }


  public FormulaCandidate canopusPrediction(CanopusPrediction canopusPrediction) {
    this.canopusPrediction = JsonNullable.<CanopusPrediction>of(canopusPrediction);
    return this;
  }

   /**
   * Get canopusPrediction
   * @return canopusPrediction
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public CanopusPrediction getCanopusPrediction() {
        return canopusPrediction.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CANOPUS_PREDICTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<CanopusPrediction> getCanopusPrediction_JsonNullable() {
    return canopusPrediction;
  }
  
  @JsonProperty(JSON_PROPERTY_CANOPUS_PREDICTION)
  public void setCanopusPrediction_JsonNullable(JsonNullable<CanopusPrediction> canopusPrediction) {
    this.canopusPrediction = canopusPrediction;
  }

  public void setCanopusPrediction(CanopusPrediction canopusPrediction) {
    this.canopusPrediction = JsonNullable.<CanopusPrediction>of(canopusPrediction);
  }


  /**
   * Return true if this FormulaCandidate object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FormulaCandidate formulaCandidate = (FormulaCandidate) o;
    return Objects.equals(this.formulaId, formulaCandidate.formulaId) &&
        Objects.equals(this.molecularFormula, formulaCandidate.molecularFormula) &&
        Objects.equals(this.adduct, formulaCandidate.adduct) &&
        equalsNullable(this.siriusScore, formulaCandidate.siriusScore) &&
        equalsNullable(this.isotopeScore, formulaCandidate.isotopeScore) &&
        equalsNullable(this.treeScore, formulaCandidate.treeScore) &&
        equalsNullable(this.zodiacScore, formulaCandidate.zodiacScore) &&
        equalsNullable(this.numOfExplainedPeaks, formulaCandidate.numOfExplainedPeaks) &&
        equalsNullable(this.numOfExplainablePeaks, formulaCandidate.numOfExplainablePeaks) &&
        equalsNullable(this.totalExplainedIntensity, formulaCandidate.totalExplainedIntensity) &&
        equalsNullable(this.medianMassDeviation, formulaCandidate.medianMassDeviation) &&
        equalsNullable(this.fragmentationTree, formulaCandidate.fragmentationTree) &&
        equalsNullable(this.simulatedIsotopePattern, formulaCandidate.simulatedIsotopePattern) &&
        equalsNullable(this.predictedFingerprint, formulaCandidate.predictedFingerprint) &&
        equalsNullable(this.compoundClasses, formulaCandidate.compoundClasses) &&
        equalsNullable(this.canopusPrediction, formulaCandidate.canopusPrediction);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(formulaId, molecularFormula, adduct, hashCodeNullable(siriusScore), hashCodeNullable(isotopeScore), hashCodeNullable(treeScore), hashCodeNullable(zodiacScore), hashCodeNullable(numOfExplainedPeaks), hashCodeNullable(numOfExplainablePeaks), hashCodeNullable(totalExplainedIntensity), hashCodeNullable(medianMassDeviation), hashCodeNullable(fragmentationTree), hashCodeNullable(simulatedIsotopePattern), hashCodeNullable(predictedFingerprint), hashCodeNullable(compoundClasses), hashCodeNullable(canopusPrediction));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FormulaCandidate {\n");
    sb.append("    formulaId: ").append(toIndentedString(formulaId)).append("\n");
    sb.append("    molecularFormula: ").append(toIndentedString(molecularFormula)).append("\n");
    sb.append("    adduct: ").append(toIndentedString(adduct)).append("\n");
    sb.append("    siriusScore: ").append(toIndentedString(siriusScore)).append("\n");
    sb.append("    isotopeScore: ").append(toIndentedString(isotopeScore)).append("\n");
    sb.append("    treeScore: ").append(toIndentedString(treeScore)).append("\n");
    sb.append("    zodiacScore: ").append(toIndentedString(zodiacScore)).append("\n");
    sb.append("    numOfExplainedPeaks: ").append(toIndentedString(numOfExplainedPeaks)).append("\n");
    sb.append("    numOfExplainablePeaks: ").append(toIndentedString(numOfExplainablePeaks)).append("\n");
    sb.append("    totalExplainedIntensity: ").append(toIndentedString(totalExplainedIntensity)).append("\n");
    sb.append("    medianMassDeviation: ").append(toIndentedString(medianMassDeviation)).append("\n");
    sb.append("    fragmentationTree: ").append(toIndentedString(fragmentationTree)).append("\n");
    sb.append("    simulatedIsotopePattern: ").append(toIndentedString(simulatedIsotopePattern)).append("\n");
    sb.append("    predictedFingerprint: ").append(toIndentedString(predictedFingerprint)).append("\n");
    sb.append("    compoundClasses: ").append(toIndentedString(compoundClasses)).append("\n");
    sb.append("    canopusPrediction: ").append(toIndentedString(canopusPrediction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `formulaId` to the URL query string
    if (getFormulaId() != null) {
      joiner.add(String.format("%sformulaId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFormulaId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `molecularFormula` to the URL query string
    if (getMolecularFormula() != null) {
      joiner.add(String.format("%smolecularFormula%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMolecularFormula()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `adduct` to the URL query string
    if (getAdduct() != null) {
      joiner.add(String.format("%sadduct%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAdduct()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `siriusScore` to the URL query string
    if (getSiriusScore() != null) {
      joiner.add(String.format("%ssiriusScore%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSiriusScore()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `isotopeScore` to the URL query string
    if (getIsotopeScore() != null) {
      joiner.add(String.format("%sisotopeScore%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getIsotopeScore()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `treeScore` to the URL query string
    if (getTreeScore() != null) {
      joiner.add(String.format("%streeScore%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTreeScore()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `zodiacScore` to the URL query string
    if (getZodiacScore() != null) {
      joiner.add(String.format("%szodiacScore%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getZodiacScore()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `numOfExplainedPeaks` to the URL query string
    if (getNumOfExplainedPeaks() != null) {
      joiner.add(String.format("%snumOfExplainedPeaks%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNumOfExplainedPeaks()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `numOfExplainablePeaks` to the URL query string
    if (getNumOfExplainablePeaks() != null) {
      joiner.add(String.format("%snumOfExplainablePeaks%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNumOfExplainablePeaks()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `totalExplainedIntensity` to the URL query string
    if (getTotalExplainedIntensity() != null) {
      joiner.add(String.format("%stotalExplainedIntensity%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTotalExplainedIntensity()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `medianMassDeviation` to the URL query string
    if (getMedianMassDeviation() != null) {
      joiner.add(getMedianMassDeviation().toUrlQueryString(prefix + "medianMassDeviation" + suffix));
    }

    // add `fragmentationTree` to the URL query string
    if (getFragmentationTree() != null) {
      joiner.add(getFragmentationTree().toUrlQueryString(prefix + "fragmentationTree" + suffix));
    }

    // add `simulatedIsotopePattern` to the URL query string
    if (getSimulatedIsotopePattern() != null) {
      joiner.add(getSimulatedIsotopePattern().toUrlQueryString(prefix + "simulatedIsotopePattern" + suffix));
    }

    // add `predictedFingerprint` to the URL query string
    if (getPredictedFingerprint() != null) {
      for (int i = 0; i < getPredictedFingerprint().size(); i++) {
        joiner.add(String.format("%spredictedFingerprint%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            URLEncoder.encode(String.valueOf(getPredictedFingerprint().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
      }
    }

    // add `compoundClasses` to the URL query string
    if (getCompoundClasses() != null) {
      joiner.add(getCompoundClasses().toUrlQueryString(prefix + "compoundClasses" + suffix));
    }

    // add `canopusPrediction` to the URL query string
    if (getCanopusPrediction() != null) {
      joiner.add(getCanopusPrediction().toUrlQueryString(prefix + "canopusPrediction" + suffix));
    }

    return joiner.toString();
  }
}

