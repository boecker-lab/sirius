/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6.0.0-SNAPSHOT
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.unijena.bioinf.ms.nightsky.sdk.model.AnnotatedPeak;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * 
 */
@JsonPropertyOrder({
  AnnotatedSpectrum.JSON_PROPERTY_MS_LEVEL,
  AnnotatedSpectrum.JSON_PROPERTY_COLLISION_ENERGY,
  AnnotatedSpectrum.JSON_PROPERTY_PEAKS,
  AnnotatedSpectrum.JSON_PROPERTY_EMPTY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AnnotatedSpectrum {
  public static final String JSON_PROPERTY_MS_LEVEL = "msLevel";
  private JsonNullable<Integer> msLevel = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_COLLISION_ENERGY = "collisionEnergy";
  private JsonNullable<String> collisionEnergy = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PEAKS = "peaks";
  private List<AnnotatedPeak> peaks;

  public static final String JSON_PROPERTY_EMPTY = "empty";
  private Boolean empty;

  public AnnotatedSpectrum() { 
  }

  public AnnotatedSpectrum msLevel(Integer msLevel) {
    this.msLevel = JsonNullable.<Integer>of(msLevel);
    return this;
  }

   /**
   * MS level of the measured spectrum.  Artificial spectra with no msLevel (e.g. Simulated Isotope patterns) use 0
   * @return msLevel
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Integer getMsLevel() {
        return msLevel.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MS_LEVEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getMsLevel_JsonNullable() {
    return msLevel;
  }
  
  @JsonProperty(JSON_PROPERTY_MS_LEVEL)
  public void setMsLevel_JsonNullable(JsonNullable<Integer> msLevel) {
    this.msLevel = msLevel;
  }

  public void setMsLevel(Integer msLevel) {
    this.msLevel = JsonNullable.<Integer>of(msLevel);
  }


  public AnnotatedSpectrum collisionEnergy(String collisionEnergy) {
    this.collisionEnergy = JsonNullable.<String>of(collisionEnergy);
    return this;
  }

   /**
   * Get collisionEnergy
   * @return collisionEnergy
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public String getCollisionEnergy() {
        return collisionEnergy.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COLLISION_ENERGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCollisionEnergy_JsonNullable() {
    return collisionEnergy;
  }
  
  @JsonProperty(JSON_PROPERTY_COLLISION_ENERGY)
  public void setCollisionEnergy_JsonNullable(JsonNullable<String> collisionEnergy) {
    this.collisionEnergy = collisionEnergy;
  }

  public void setCollisionEnergy(String collisionEnergy) {
    this.collisionEnergy = JsonNullable.<String>of(collisionEnergy);
  }


  public AnnotatedSpectrum peaks(List<AnnotatedPeak> peaks) {
    this.peaks = peaks;
    return this;
  }

  public AnnotatedSpectrum addPeaksItem(AnnotatedPeak peaksItem) {
    if (this.peaks == null) {
      this.peaks = new ArrayList<>();
    }
    this.peaks.add(peaksItem);
    return this;
  }

   /**
   * Get peaks
   * @return peaks
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PEAKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AnnotatedPeak> getPeaks() {
    return peaks;
  }


  @JsonProperty(JSON_PROPERTY_PEAKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeaks(List<AnnotatedPeak> peaks) {
    this.peaks = peaks;
  }


  public AnnotatedSpectrum empty(Boolean empty) {
    this.empty = empty;
    return this;
  }

   /**
   * Get empty
   * @return empty
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMPTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEmpty() {
    return empty;
  }


  @JsonProperty(JSON_PROPERTY_EMPTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmpty(Boolean empty) {
    this.empty = empty;
  }


  /**
   * Return true if this AnnotatedSpectrum object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnnotatedSpectrum annotatedSpectrum = (AnnotatedSpectrum) o;
    return equalsNullable(this.msLevel, annotatedSpectrum.msLevel) &&
        equalsNullable(this.collisionEnergy, annotatedSpectrum.collisionEnergy) &&
        Objects.equals(this.peaks, annotatedSpectrum.peaks) &&
        Objects.equals(this.empty, annotatedSpectrum.empty);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(msLevel), hashCodeNullable(collisionEnergy), peaks, empty);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnnotatedSpectrum {\n");
    sb.append("    msLevel: ").append(toIndentedString(msLevel)).append("\n");
    sb.append("    collisionEnergy: ").append(toIndentedString(collisionEnergy)).append("\n");
    sb.append("    peaks: ").append(toIndentedString(peaks)).append("\n");
    sb.append("    empty: ").append(toIndentedString(empty)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `msLevel` to the URL query string
    if (getMsLevel() != null) {
      joiner.add(String.format("%smsLevel%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMsLevel()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `collisionEnergy` to the URL query string
    if (getCollisionEnergy() != null) {
      joiner.add(String.format("%scollisionEnergy%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCollisionEnergy()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `peaks` to the URL query string
    if (getPeaks() != null) {
      for (int i = 0; i < getPeaks().size(); i++) {
        if (getPeaks().get(i) != null) {
          joiner.add(getPeaks().get(i).toUrlQueryString(String.format("%speaks%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `empty` to the URL query string
    if (getEmpty() != null) {
      joiner.add(String.format("%sempty%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEmpty()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

