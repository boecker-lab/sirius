/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6.0.0-SNAPSHOT
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * 
 */
@JsonPropertyOrder({
  ZodiacEdgeFilterThresholds.JSON_PROPERTY_THRESHOLD_FILTER,
  ZodiacEdgeFilterThresholds.JSON_PROPERTY_MIN_LOCAL_CANDIDATES,
  ZodiacEdgeFilterThresholds.JSON_PROPERTY_MIN_LOCAL_CONNECTIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ZodiacEdgeFilterThresholds {
  public static final String JSON_PROPERTY_THRESHOLD_FILTER = "thresholdFilter";
  private Double thresholdFilter;

  public static final String JSON_PROPERTY_MIN_LOCAL_CANDIDATES = "minLocalCandidates";
  private Integer minLocalCandidates;

  public static final String JSON_PROPERTY_MIN_LOCAL_CONNECTIONS = "minLocalConnections";
  private Integer minLocalConnections;

  public ZodiacEdgeFilterThresholds() { 
  }

  public ZodiacEdgeFilterThresholds thresholdFilter(Double thresholdFilter) {
    this.thresholdFilter = thresholdFilter;
    return this;
  }

   /**
   * Get thresholdFilter
   * @return thresholdFilter
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THRESHOLD_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getThresholdFilter() {
    return thresholdFilter;
  }


  @JsonProperty(JSON_PROPERTY_THRESHOLD_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThresholdFilter(Double thresholdFilter) {
    this.thresholdFilter = thresholdFilter;
  }


  public ZodiacEdgeFilterThresholds minLocalCandidates(Integer minLocalCandidates) {
    this.minLocalCandidates = minLocalCandidates;
    return this;
  }

   /**
   * Get minLocalCandidates
   * @return minLocalCandidates
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_LOCAL_CANDIDATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMinLocalCandidates() {
    return minLocalCandidates;
  }


  @JsonProperty(JSON_PROPERTY_MIN_LOCAL_CANDIDATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinLocalCandidates(Integer minLocalCandidates) {
    this.minLocalCandidates = minLocalCandidates;
  }


  public ZodiacEdgeFilterThresholds minLocalConnections(Integer minLocalConnections) {
    this.minLocalConnections = minLocalConnections;
    return this;
  }

   /**
   * Get minLocalConnections
   * @return minLocalConnections
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIN_LOCAL_CONNECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMinLocalConnections() {
    return minLocalConnections;
  }


  @JsonProperty(JSON_PROPERTY_MIN_LOCAL_CONNECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinLocalConnections(Integer minLocalConnections) {
    this.minLocalConnections = minLocalConnections;
  }


  /**
   * Return true if this ZodiacEdgeFilterThresholds object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ZodiacEdgeFilterThresholds zodiacEdgeFilterThresholds = (ZodiacEdgeFilterThresholds) o;
    return Objects.equals(this.thresholdFilter, zodiacEdgeFilterThresholds.thresholdFilter) &&
        Objects.equals(this.minLocalCandidates, zodiacEdgeFilterThresholds.minLocalCandidates) &&
        Objects.equals(this.minLocalConnections, zodiacEdgeFilterThresholds.minLocalConnections);
  }

  @Override
  public int hashCode() {
    return Objects.hash(thresholdFilter, minLocalCandidates, minLocalConnections);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ZodiacEdgeFilterThresholds {\n");
    sb.append("    thresholdFilter: ").append(toIndentedString(thresholdFilter)).append("\n");
    sb.append("    minLocalCandidates: ").append(toIndentedString(minLocalCandidates)).append("\n");
    sb.append("    minLocalConnections: ").append(toIndentedString(minLocalConnections)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `thresholdFilter` to the URL query string
    if (getThresholdFilter() != null) {
      joiner.add(String.format("%sthresholdFilter%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getThresholdFilter()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `minLocalCandidates` to the URL query string
    if (getMinLocalCandidates() != null) {
      joiner.add(String.format("%sminLocalCandidates%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMinLocalCandidates()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `minLocalConnections` to the URL query string
    if (getMinLocalConnections() != null) {
      joiner.add(String.format("%sminLocalConnections%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMinLocalConnections()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

