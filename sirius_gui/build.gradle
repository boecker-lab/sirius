plugins {
    id 'org.openjfx.javafxplugin' version '0.0.13'
}
mainClassName = "de.unijena.bioinf.ms.frontend.SiriusGUIApplication"

javafx {
    version = "$targetCompatibility"
    modules = [ 'javafx.controls', 'javafx.swing', 'javafx.web' ]
}

apply plugin: 'java-library'
ext['jna.version'] = '5.4.0'

dependencies {
//project
    api project(':sirius_cli')
//    implementation "org.slf4j:slf4j-jdk14:$slf4j_version"

//internal
    api "de.unijena.bioinf:jjobs-swing:$jjobs_version"
    // will be ported to sirius_cli later
    api "de.unijena.bioinf.ms:combinatorial_fragmenter:$siriusVersion"
//external
    api "net.sf.opencsv:opencsv:2.3"
    api "org.swinglabs.swingx:swingx-all:1.6.5-1"
    api "org.openscience.cdk:cdk-render:$cdk_version"
    api "org.openscience.cdk:cdk-renderextra:$cdk_version"
    api "org.openscience.cdk:cdk-renderawt:$cdk_version"
    api "org.openscience.cdk:cdk-data:$cdk_version"
    api "org.openscience.cdk:cdk-core:$cdk_version"
    api "org.openscience.cdk:cdk-interfaces:$cdk_version"
    api "org.openscience.cdk:cdk-inchi:$cdk_version"
    api "org.openscience.cdk:cdk-smiles:$cdk_version"
    api "org.openscience.cdk:cdk-io:$cdk_version"
    api "org.openscience.cdk:cdk-ioformats:$cdk_version"
    api "org.openscience.cdk:cdk-sdg:$cdk_version"
    api "org.openscience.cdk:cdk-smarts:$cdk_version"
    api "org.openscience.cdk:cdk-legacy:$cdk_version"

    api 'com.glazedlists:glazedlists:1.11.0'

//    api 'com.kitfox.svg:svg-salamander:1.0'
    api 'org.apache.xmlgraphics:batik-rasterizer:1.14'
    api 'org.apache.xmlgraphics:fop:2.7'

//    api 'org.openjfx:javafx:17.0.2'
//    api 'org.openjfx:javafx-web:17.0.2'
//    api 'org.openjfx:javafx-swing:17.0.2'

}

//this includes compileOnly dependencies like the ILP solver jars to the idea provided scope.
/*idea {
    module {
        scopes.RUNTIME.plus += [configurations.compileOnly]
    }
}*/

artifactory {
    contextUrl = 'https://bio.informatik.uni-jena.de/repository/'
    publish {
        repository {
            if (version.toString().endsWith('-SNAPSHOT'))
                repoKey = 'libs-snapshot-local'
            else
                repoKey = 'libs-release-local'

            username = project.findProperty('de.unijena.bioinf.build.artifactory.username')
            password = project.findProperty('de.unijena.bioinf.build.artifactory.password')
        }
        defaults {
            publications('mavenJava')
        }
    }
}