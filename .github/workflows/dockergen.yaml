name: dockergen

on: [ workflow_call ]
      
jobs:
  dockergen:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
    - if: "(${{ env.DOCKERHUB_USERNAME }} != '') && (${{ env.DOCKERHUB_TOKEN }} != '')"
      uses: actions/checkout@v2

    - if: "(${{ env.DOCKERHUB_USERNAME }} != '') && (${{ env.DOCKERHUB_TOKEN }} != '')"
      name: Load Build properties
      uses: Reedyuk/read-properties@v1.0.1
      id: sirius_version
      with:
        path: './sirius_cli/src/main/resources/sirius_frontend.build.properties'
        property: 'de.unijena.bioinf.siriusFrontend.version'

    - if: "(${{ env.DOCKERHUB_USERNAME }} != '') && (${{ env.DOCKERHUB_TOKEN }} != '')"
      name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: "sirius-${{ steps.sirius_version.outputs.value }}-Linux-x86-64"
        path: sirius-artifact

    - if: "(${{ env.DOCKERHUB_USERNAME }} != '') && (${{ env.DOCKERHUB_TOKEN }} != '')"
      name: List Artifact Contents
      run: ls sirius-artifact

    - if: "(${{ env.DOCKERHUB_USERNAME }} != '') && (${{ env.DOCKERHUB_TOKEN }} != '')"
      name: Unpack Sirius
      run: |
        unzip sirius-${{ steps.sirius_version.outputs.value }}-linux64.zip
      working-directory: sirius-artifact/

    - if: "(${{ env.DOCKERHUB_USERNAME }} != '') && (${{ env.DOCKERHUB_TOKEN }} != '')"
      name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - if: "(${{ env.DOCKERHUB_USERNAME }} != '') && (${{ env.DOCKERHUB_TOKEN }} != '')"
      name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}

    - if: "(${{ env.DOCKERHUB_USERNAME }} != '') && (${{ env.DOCKERHUB_TOKEN }} != '')"
      name: Build and export to Docker
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./sirius_dist/sirius_docker/Dockerfile
        load: true
        tags: test_container

    - if: "(${{ env.DOCKERHUB_USERNAME }} != '') && (${{ env.DOCKERHUB_TOKEN }} != '')"
      name: Test sirius --help
      run: |
        docker run --rm test_container sirius --help

    - if: "(${{ env.DOCKERHUB_USERNAME }} != '') && (${{ env.DOCKERHUB_TOKEN }} != '')"
      name: Test ILP solver on laudanosine.mgf
      run: |
        mkdir tmp_output

        docker run -v ${{ github.workspace }}/sirius_doc/manual/demo-data/mgf:/inputfolder -v ${{ github.workspace }}/tmp_output:/result --rm test_container \
        sirius --input ./inputfolder/laudanosine.mgf --output ./result formula -p orbitrap write-summaries --output ./result

        folder_path="./tmp_output/1_laudanosine_FEATURE_1/"
        if [ ! -d "$folder_path" ]; then
          echo "Folder does not exist: $folder_path"
          exit 1
        fi

        file_path="./tmp_output/1_laudanosine_FEATURE_1/formula_candidates.tsv"
        if [ ! -e "$file_path" ]; then
          echo "File does not exist: $file_path"
          exit 1
        fi

    - if: "(${{ env.DOCKERHUB_USERNAME }} != '') && (${{ env.DOCKERHUB_TOKEN }} != '')"
      name: Get lowercase version
      id: lowercase_version
      run: |
        lowercase=$(echo "${{ steps.sirius_version.outputs.value }}" | tr '[:upper:]' '[:lower:]')
        echo $lowercase
        echo "lowercase_version=$lowercase" >> $GITHUB_OUTPUT

    - if: "(${{ env.DOCKERHUB_USERNAME }} != '') && (${{ env.DOCKERHUB_TOKEN }} != '')"
      name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./sirius_dist/sirius_docker/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:${{ steps.lowercase_version.outputs.lowercase_version }}
        labels: ${{ steps.meta.outputs.labels }}